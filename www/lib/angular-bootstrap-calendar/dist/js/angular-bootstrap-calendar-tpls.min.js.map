{"version":3,"sources":["templates.js","angular-bootstrap-calendar-tpls.js","services/moment.js","services/interact.js","services/calendarTitle.js","services/calendarHelper.js","services/calendarDebounce.js","services/calendarConfig.js","filters/calendarTruncateEventTitle.js","filters/calendarLimitTo.js","filters/calendarDate.js","directives/mwlElementDimensions.js","directives/mwlDroppable.js","directives/mwlDraggable.js","directives/mwlDateModifier.js","directives/mwlCollapseFallback.js","directives/mwlCalendarYear.js","directives/mwlCalendarWeek.js","directives/mwlCalendarSlideBox.js","directives/mwlCalendarMonth.js","directives/mwlCalendarHourList.js","directives/mwlCalendarDay.js","directives/mwlCalendar.js"],"names":["window","$templateCache","angular","run","put","module","factory","moment","constant","interact","calendarHelper","formatDate","weekTitleLabel","replace","day","currentDay","month","calendarConfig","titleFormats","week","year","format","dateFormatter","dateFilter","date","oldStart","adjustEndDateFromStartDiff","toDate","oldEnd","newStart","eventIsInPeriod","eventStart","periodStart","diff","periodEnd","recursOn","event","startsAt","eventEnd","set","Error","filterEventsInPeriod","startPeriod","endPeriod","isAfter","isBefore","isSame","calendarDate","period","filter","allEvents","getEventsInPeriod","incrementsBadgeTotal","startOf","length","endOf","weekdays","events","count","getWeekDayNames","getYearView","view","eventsInPeriod","weekday","dateFormats","weekDay","push","label","periodEvents","clone","badgeTotal","getBadgeTotal","startOfMonth","endOfMonthView","today","displayAllMonthEvents","inMonth","isPast","isFuture","isWeekend","indexOf","monthEvents","getWeekView","endOfWeek","days","weekDayLabel","dayCounter","isToday","dayLabel","eventsSorted","weekViewEnd","weekViewStart","span","offset","endsAt","daySpan","dayOffset","dayEndHour","hourHeight","calendarHeight","dayStartHour","dayViewEnd","hourHeightMultiplier","dayViewStart","hours","buckets","calendarStart","add","calendarEnd","top","height","diffStart","left","forEach","bucket","map","canFitInThisBucket","cannotFitInABucket","weekView","bucketIndex","bucketItem","getWeekViewWithTimes","dayViewSplit","newDayEvents","getDayView","dayEvents","newEvents","getDayViewHeight","dayViewStartM","concat","getMonthView","service","args","$timeout","debounce","immediate","timeout","callNow","cancel","apply","context","this","arguments","later","wait","func","provider","defaultFormats","hour","title","defaultDateFormats","defaultTitleFormats","timeLabel","copy","configProvider","extend","setTitleFormats","formats","strings","i18nStrings","setDisplayAllMonthEvents","value","setDateFormatter","showTimesOnWeekView","string","boxHeight","substr","limitToFilter","version","Number","limit","begin","Math","abs","input","Infinity","toString","isNaN","slice","parseInt","max","getFromConfig","$stateful","$parse","$attrs","mwlElementDimensions","directive","$element","$scope","assign","restrict","offsetWidth","controller","offsetHeight","element","target","addClass","dropzone","ondropdeactivate","removeClass","ondrop","relatedTarget","dropData","$apply","unbindDestroy","onDrop","$on","unset","snapGridDimensions","$window","snapGrid","getUnitsMoved","y","gridDimensions","result","css","transformValue","canDrag","mwlDraggable","x","onstart","snap","style","pointerEvents","onDragStart","elm","onmove","parseFloat","attr","dx","dy","axis","position","translateElement","onDrag","onend","removeAttr","onDragEnd","isDefined","setToToday","Date","increment","onClick","decrement","unbind","subtract","bind","scope","unbindWatcher","$watch","mwlCollapseFallback","shouldCollapse","$injector","has","firstRun","autoOpen","vm","monthClicked","monthClickedFirstRun","openMonthIndex","openRowIndex","monthIndex","handleEventDrop","newEnd","onEventDrop","floor","calendarNewEventStart","calendarNewEventEnd","newMonthDate","calendarEvent","templateUrl","onEventClick","require","onEditEventClick","editEventHtml","deleteEventHtml","onTimespanClick","calendarCtrl","showTimes","$sce","dayViewHeight","weekDragged","minuteChunksMoved","minutesDiff","daysDiff","tempStartsAt","tempTimeChanged","isOpen","link","isMonthView","attrs","ctrls","onDeleteEventClick","monthOffsets","weekDays","rows","i","dayClickedFirstRun","dayClicked","openDayIndex","dayIndex","highlightEvent","highlightClass","shouldAddClass","dayContainsEvent","type","newDayDate","updateDays","originalLocale","locale","timeChanged","$locale","calendarTitle","calendarDebounce","drillDown","changeView","newDay","onDrillDownClick","nextView","calendarNextView","previousDate","previousView","refreshCalendar","rawDate","index","viewTitle","shouldUpdate","Object","defineProperty","currentDate","$broadcast","unbindLocaleWatcher","unbindOnDestroy","id","unbindDestroyListener"],"mappings":"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","file":"angular-bootstrap-calendar-tpls.min.js","sourcesContent":["angular.module(\"mwl.calendar\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"src/templates/calendar.html\",\"<div class=\\\"cal-context\\\" ng-switch=\\\"view\\\"><div class=\\\"alert alert-danger\\\" ng-switch-default>The value passed to the view attribute of the calendar is not set</div><div class=\\\"alert alert-danger\\\" ng-hide=\\\"currentDay\\\">The value passed to current-day attribute of the calendar is not set</div><mwl-calendar-year events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" on-edit-event-click=\\\"onEditEventClick\\\" on-delete-event-click=\\\"onDeleteEventClick\\\" on-timespan-click=\\\"onTimespanClick\\\" edit-event-html=\\\"editEventHtml\\\" delete-event-html=\\\"deleteEventHtml\\\" auto-open=\\\"autoOpen\\\" ng-switch-when=\\\"year\\\"></mwl-calendar-year><mwl-calendar-month events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" on-edit-event-click=\\\"onEditEventClick\\\" on-delete-event-click=\\\"onDeleteEventClick\\\" on-timespan-click=\\\"onTimespanClick\\\" edit-event-html=\\\"editEventHtml\\\" delete-event-html=\\\"deleteEventHtml\\\" auto-open=\\\"autoOpen\\\" ng-switch-when=\\\"month\\\"></mwl-calendar-month><mwl-calendar-week events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit || 30\\\" ng-switch-when=\\\"week\\\"></mwl-calendar-week><mwl-calendar-day events=\\\"events\\\" current-day=\\\"currentDay\\\" on-event-click=\\\"onEventClick\\\" on-event-drop=\\\"onEventDrop\\\" day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit || 30\\\" ng-switch-when=\\\"day\\\"></mwl-calendar-day></div>\");\n$templateCache.put(\"src/templates/calendarDayView.html\",\"<div class=\\\"cal-day-box\\\"><div class=\\\"row-fluid clearfix cal-row-head\\\"><div class=\\\"span1 col-xs-1 cal-cell\\\" ng-bind=\\\"vm.calendarConfig.i18nStrings.timeLabel\\\"></div><div class=\\\"span11 col-xs-11 cal-cell\\\" ng-bind=\\\"vm.calendarConfig.i18nStrings.eventsLabel\\\"></div></div><div class=\\\"cal-day-panel clearfix\\\" ng-style=\\\"{height: vm.dayViewHeight + \\'px\\'}\\\"><mwl-calendar-hour-list day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit\\\"></mwl-calendar-hour-list><div class=\\\"pull-left day-event day-highlight\\\" ng-class=\\\"\\'dh-event-\\' + event.type + \\' \\' + event.cssClass\\\" ng-repeat=\\\"event in vm.view track by event.$id\\\" ng-style=\\\"{top: event.top + \\'px\\', left: event.left + 60 + \\'px\\', height: event.height + \\'px\\'}\\\" mwl-draggable=\\\"event.editable !== false\\\" axis=\\\"y\\\" snap-grid=\\\"{y: 30}\\\" on-drag=\\\"vm.tempTimeChanged(event, y)\\\" on-drag-end=\\\"vm.timeChanged(event, y)\\\"><span class=\\\"cal-hours\\\"><span ng-show=\\\"event.top == 0\\\"><span ng-bind=\\\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'day\\':true\\\"></span>,</span> <span ng-bind=\\\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\\\"></span></span> <a href=\\\"javascript:;\\\" class=\\\"event-item\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\"><span ng-bind-html=\\\"vm.$sce.trustAsHtml(event.title) | calendarTruncateEventTitle:20:event.height\\\"></span></a></div></div></div>\");\n$templateCache.put(\"src/templates/calendarHourList.html\",\"<div class=\\\"cal-day-panel-hour\\\"><div class=\\\"cal-day-hour\\\" ng-repeat=\\\"hour in vm.hours track by $index\\\"><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"><strong ng-bind=\\\"hour.label\\\"></strong></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 30\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 30\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 15\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div><div class=\\\"row-fluid cal-day-hour-part\\\" ng-show=\\\"vm.dayViewSplit < 15\\\"><div class=\\\"span1 col-xs-1\\\"></div><div class=\\\"span11 col-xs-11\\\"></div></div></div></div>\");\n$templateCache.put(\"src/templates/calendarMonthDay.html\",\"<div mwl-droppable on-drop=\\\"vm.handleEventDrop(dropData.event, day.date)\\\" class=\\\"cal-month-day\\\" ng-class=\\\"{\\n            \\'cal-day-outmonth\\': !day.inMonth,\\n            \\'cal-day-inmonth\\': day.inMonth,\\n            \\'cal-day-weekend\\': day.isWeekend,\\n            \\'cal-day-past\\': day.isPast,\\n            \\'cal-day-today\\': day.isToday,\\n            \\'cal-day-future\\': day.isFuture\\n          }\\\"><small class=\\\"cal-events-num badge badge-important pull-left\\\" ng-show=\\\"day.badgeTotal > 0\\\" ng-bind=\\\"day.badgeTotal\\\"></small> <span class=\\\"pull-right\\\" data-cal-date ng-click=\\\"vm.calendarCtrl.drillDown(day.date)\\\" ng-bind=\\\"day.label\\\"></span><div class=\\\"cal-day-tick\\\" ng-show=\\\"dayIndex === vm.openDayIndex && vm.view[vm.openDayIndex].events.length > 0\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i> <i class=\\\"fa fa-chevron-up\\\"></i></div><div ng-include=\\\"\\'src/templates/calendarMonthEventsList.html\\'\\\"></div></div>\");\n$templateCache.put(\"src/templates/calendarMonthEventsList.html\",\"<div class=\\\"events-list\\\" ng-show=\\\"day.events.length > 0\\\"><a ng-repeat=\\\"event in day.events | orderBy:\\'startsAt\\' track by event.$id\\\" href=\\\"javascript:;\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\" class=\\\"pull-left event\\\" ng-class=\\\"\\'event-\\' + event.type + \\' \\' + event.cssClass\\\" ng-mouseenter=\\\"vm.highlightEvent(event, true)\\\" ng-mouseleave=\\\"vm.highlightEvent(event, false)\\\" tooltip-append-to-body=\\\"true\\\" tooltip-html-unsafe=\\\"{{ (event.startsAt | calendarDate:\\'time\\':true) + \\' - \\' + event.title }}\\\" mwl-draggable=\\\"event.editable !== false\\\" drop-data=\\\"{event: event}\\\"></a></div>\");\n$templateCache.put(\"src/templates/calendarMonthView.html\",\"<div class=\\\"cal-row-fluid cal-row-head\\\"><div class=\\\"cal-cell1\\\" ng-repeat=\\\"day in vm.weekDays track by $index\\\" ng-bind=\\\"day\\\"></div></div><div class=\\\"cal-month-box\\\"><div ng-repeat=\\\"rowOffset in vm.monthOffsets track by rowOffset\\\"><div class=\\\"cal-row-fluid cal-before-eventlist\\\"><div ng-repeat=\\\"day in vm.view | calendarLimitTo:7:rowOffset track by $index\\\" ng-init=\\\"dayIndex = vm.view.indexOf(day)\\\" class=\\\"cal-cell1 cal-cell {{ day.highlightClass }}\\\" ng-click=\\\"vm.dayClicked(day)\\\" ng-class=\\\"{pointer: day.events.length > 0}\\\"><div ng-include=\\\"\\'src/templates/calendarMonthDay.html\\'\\\"></div></div></div><mwl-calendar-slide-box is-open=\\\"vm.openRowIndex === $index && vm.view[vm.openDayIndex].events.length > 0\\\" events=\\\"vm.view[vm.openDayIndex].events\\\" on-event-click=\\\"onEventClick\\\" edit-event-html=\\\"editEventHtml\\\" on-edit-event-click=\\\"onEditEventClick\\\" delete-event-html=\\\"deleteEventHtml\\\" on-delete-event-click=\\\"onDeleteEventClick\\\"></mwl-calendar-slide-box></div></div>\");\n$templateCache.put(\"src/templates/calendarSlideBox.html\",\"<div class=\\\"cal-slide-box\\\" collapse=\\\"vm.shouldCollapse\\\" mwl-collapse-fallback=\\\"vm.shouldCollapse\\\"><div class=\\\"cal-slide-content cal-event-list\\\"><ul class=\\\"unstyled list-unstyled\\\"><li ng-repeat=\\\"event in events | orderBy:\\'startsAt\\' track by event.$id\\\" ng-class=\\\"event.cssClass\\\" mwl-draggable=\\\"event.editable !== false\\\" drop-data=\\\"{event: event}\\\"><span class=\\\"pull-left event\\\" ng-class=\\\"\\'event-\\' + event.type\\\"></span> &nbsp; <a href=\\\"javascript:;\\\" class=\\\"event-item\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\"><span ng-bind-html=\\\"vm.$sce.trustAsHtml(event.title)\\\"></span> <span ng-show=\\\"isMonthView\\\">(<span ng-bind=\\\"event.startsAt | calendarDate:\\'time\\':true\\\"></span>)</span> <span ng-show=\\\"isYearView\\\">(<span ng-bind=\\\"event.startsAt | calendarDate:\\'datetime\\':true\\\"></span>)</span></a> <a href=\\\"javascript:;\\\" class=\\\"event-item-edit\\\" ng-if=\\\"editEventHtml && event.editable !== false\\\" ng-bind-html=\\\"vm.$sce.trustAsHtml(editEventHtml)\\\" ng-click=\\\"onEditEventClick({calendarEvent: event})\\\"></a> <a href=\\\"javascript:;\\\" class=\\\"event-item-delete\\\" ng-if=\\\"deleteEventHtml && event.deletable !== false\\\" ng-bind-html=\\\"vm.$sce.trustAsHtml(deleteEventHtml)\\\" ng-click=\\\"onDeleteEventClick({calendarEvent: event})\\\"></a></li></ul></div></div>\");\n$templateCache.put(\"src/templates/calendarWeekView.html\",\"<div class=\\\"cal-week-box\\\" ng-class=\\\"{\\'cal-day-box\\': vm.showTimes}\\\"><div class=\\\"cal-row-fluid cal-row-head\\\"><div class=\\\"cal-cell1\\\" ng-repeat=\\\"day in vm.view.days track by $index\\\" ng-class=\\\"{\\n        \\'cal-day-weekend\\': day.isWeekend,\\n        \\'cal-day-past\\': day.isPast,\\n        \\'cal-day-today\\': day.isToday,\\n        \\'cal-day-future\\': day.isFuture}\\\" mwl-element-dimensions=\\\"vm.dayColumnDimensions\\\"><span ng-bind=\\\"day.weekDayLabel\\\"></span><br><small><span data-cal-date ng-click=\\\"vm.calendarCtrl.drillDown(day.date)\\\" class=\\\"pointer\\\" ng-bind=\\\"day.dayLabel\\\"></span></small></div></div><div class=\\\"cal-day-panel clearfix\\\" ng-style=\\\"{height: vm.showTimes ? (vm.dayViewHeight + \\'px\\') : \\'auto\\'}\\\"><mwl-calendar-hour-list day-view-start=\\\"dayViewStart\\\" day-view-end=\\\"dayViewEnd\\\" day-view-split=\\\"dayViewSplit\\\" ng-if=\\\"vm.showTimes\\\"></mwl-calendar-hour-list><div class=\\\"row\\\"><div class=\\\"col-xs-12\\\"><div class=\\\"cal-row-fluid\\\" ng-repeat=\\\"event in vm.view.events track by event.$id\\\"><div ng-class=\\\"\\'cal-cell\\' + (vm.showTimes ? 1 : event.daySpan) + \\' cal-offset\\' + event.dayOffset + \\' day-highlight dh-event-\\' + event.type + \\' \\' + event.cssClass\\\" ng-style=\\\"{top: (event.top + 2) + \\'px\\', position: vm.showTimes ? \\'absolute\\' : \\'inherit\\'}\\\" data-event-class mwl-draggable=\\\"event.editable !== false\\\" axis=\\\"vm.showTimes ? \\'xy\\' : \\'x\\'\\\" snap-grid=\\\"vm.showTimes ? {x: vm.dayColumnDimensions.width, y: 30} : {x: vm.dayColumnDimensions.width}\\\" on-drag=\\\"vm.tempTimeChanged(event, y)\\\" on-drag-end=\\\"vm.weekDragged(event, x, y)\\\"><strong ng-bind=\\\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\\\" ng-show=\\\"vm.showTimes\\\"></strong> <a href=\\\"javascript:;\\\" ng-click=\\\"onEventClick({calendarEvent: event})\\\" class=\\\"event-item\\\" ng-bind-html=\\\"vm.$sce.trustAsHtml(event.title)\\\" tooltip-html-unsafe=\\\"{{ event.title }}\\\" tooltip-placement=\\\"left\\\" tooltip-append-to-body=\\\"true\\\"></a></div></div></div></div></div></div>\");\n$templateCache.put(\"src/templates/calendarYearView.html\",\"<div class=\\\"cal-year-box\\\"><div ng-repeat=\\\"rowOffset in [0, 4, 8] track by rowOffset\\\"><div class=\\\"row cal-before-eventlist\\\"><div class=\\\"span3 col-md-3 col-xs-6 cal-cell\\\" ng-repeat=\\\"month in vm.view | calendarLimitTo:4:rowOffset track by $index\\\" ng-init=\\\"monthIndex = vm.view.indexOf(month)\\\" ng-click=\\\"vm.monthClicked(month)\\\" ng-class=\\\"{pointer: month.events.length > 0, \\'cal-day-today\\': month.isToday}\\\" mwl-droppable on-drop=\\\"vm.handleEventDrop(dropData.event, month.date)\\\"><span class=\\\"pull-right\\\" data-cal-date ng-click=\\\"vm.calendarCtrl.drillDown(month.date)\\\" ng-bind=\\\"month.label\\\"></span> <small class=\\\"cal-events-num badge badge-important pull-left\\\" ng-show=\\\"month.badgeTotal > 0\\\" ng-bind=\\\"month.badgeTotal\\\"></small><div class=\\\"cal-day-tick\\\" ng-show=\\\"monthIndex === vm.openMonthIndex && vm.view[vm.openMonthIndex].events.length > 0\\\"><i class=\\\"glyphicon glyphicon-chevron-up\\\"></i> <i class=\\\"fa fa-chevron-up\\\"></i></div></div></div><mwl-calendar-slide-box is-open=\\\"vm.openRowIndex === $index && vm.view[vm.openMonthIndex].events.length > 0\\\" events=\\\"vm.view[vm.openMonthIndex].events\\\" on-event-click=\\\"onEventClick\\\" edit-event-html=\\\"editEventHtml\\\" on-edit-event-click=\\\"onEditEventClick\\\" delete-event-html=\\\"deleteEventHtml\\\" on-delete-event-click=\\\"onDeleteEventClick\\\"></mwl-calendar-slide-box></div></div>\");}]);","/**\n * angular-bootstrap-calendar - A pure AngularJS bootstrap themed responsive calendar that can display events and has views for year, month, week and day\n * @version v0.11.2\n * @link https://github.com/mattlewis92/angular-bootstrap-calendar\n * @license MIT\n */\n(function (window, angular) {\n    'use strict';\n    angular.module('mwl.calendar', []);\n    angular.module('mwl.calendar').run([\n        '$templateCache',\n        function ($templateCache) {\n            $templateCache.put('src/templates/calendar.html', '<div class=\"cal-context\" ng-switch=\"view\"><div class=\"alert alert-danger\" ng-switch-default>The value passed to the view attribute of the calendar is not set</div><div class=\"alert alert-danger\" ng-hide=\"currentDay\">The value passed to current-day attribute of the calendar is not set</div><mwl-calendar-year events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" on-edit-event-click=\"onEditEventClick\" on-delete-event-click=\"onDeleteEventClick\" on-timespan-click=\"onTimespanClick\" edit-event-html=\"editEventHtml\" delete-event-html=\"deleteEventHtml\" auto-open=\"autoOpen\" ng-switch-when=\"year\"></mwl-calendar-year><mwl-calendar-month events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" on-edit-event-click=\"onEditEventClick\" on-delete-event-click=\"onDeleteEventClick\" on-timespan-click=\"onTimespanClick\" edit-event-html=\"editEventHtml\" delete-event-html=\"deleteEventHtml\" auto-open=\"autoOpen\" ng-switch-when=\"month\"></mwl-calendar-month><mwl-calendar-week events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit || 30\" ng-switch-when=\"week\"></mwl-calendar-week><mwl-calendar-day events=\"events\" current-day=\"currentDay\" on-event-click=\"onEventClick\" on-event-drop=\"onEventDrop\" day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit || 30\" ng-switch-when=\"day\"></mwl-calendar-day></div>');\n            $templateCache.put('src/templates/calendarDayView.html', '<div class=\"cal-day-box\"><div class=\"row-fluid clearfix cal-row-head\"><div class=\"span1 col-xs-1 cal-cell\" ng-bind=\"vm.calendarConfig.i18nStrings.timeLabel\"></div><div class=\"span11 col-xs-11 cal-cell\" ng-bind=\"vm.calendarConfig.i18nStrings.eventsLabel\"></div></div><div class=\"cal-day-panel clearfix\" ng-style=\"{height: vm.dayViewHeight + \\'px\\'}\"><mwl-calendar-hour-list day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit\"></mwl-calendar-hour-list><div class=\"pull-left day-event day-highlight\" ng-class=\"\\'dh-event-\\' + event.type + \\' \\' + event.cssClass\" ng-repeat=\"event in vm.view track by event.$id\" ng-style=\"{top: event.top + \\'px\\', left: event.left + 60 + \\'px\\', height: event.height + \\'px\\'}\" mwl-draggable=\"event.editable !== false\" axis=\"y\" snap-grid=\"{y: 30}\" on-drag=\"vm.tempTimeChanged(event, y)\" on-drag-end=\"vm.timeChanged(event, y)\"><span class=\"cal-hours\"><span ng-show=\"event.top == 0\"><span ng-bind=\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'day\\':true\"></span>,</span> <span ng-bind=\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\"></span></span> <a href=\"javascript:;\" class=\"event-item\" ng-click=\"onEventClick({calendarEvent: event})\"><span ng-bind-html=\"vm.$sce.trustAsHtml(event.title) | calendarTruncateEventTitle:20:event.height\"></span></a></div></div></div>');\n            $templateCache.put('src/templates/calendarHourList.html', '<div class=\"cal-day-panel-hour\"><div class=\"cal-day-hour\" ng-repeat=\"hour in vm.hours track by $index\"><div class=\"row-fluid cal-day-hour-part\"><div class=\"span1 col-xs-1\"><strong ng-bind=\"hour.label\"></strong></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 30\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 30\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 15\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div><div class=\"row-fluid cal-day-hour-part\" ng-show=\"vm.dayViewSplit < 15\"><div class=\"span1 col-xs-1\"></div><div class=\"span11 col-xs-11\"></div></div></div></div>');\n            $templateCache.put('src/templates/calendarMonthDay.html', '<div mwl-droppable on-drop=\"vm.handleEventDrop(dropData.event, day.date)\" class=\"cal-month-day\" ng-class=\"{\\n            \\'cal-day-outmonth\\': !day.inMonth,\\n            \\'cal-day-inmonth\\': day.inMonth,\\n            \\'cal-day-weekend\\': day.isWeekend,\\n            \\'cal-day-past\\': day.isPast,\\n            \\'cal-day-today\\': day.isToday,\\n            \\'cal-day-future\\': day.isFuture\\n          }\"><small class=\"cal-events-num badge badge-important pull-left\" ng-show=\"day.badgeTotal > 0\" ng-bind=\"day.badgeTotal\"></small> <span class=\"pull-right\" data-cal-date ng-click=\"vm.calendarCtrl.drillDown(day.date)\" ng-bind=\"day.label\"></span><div class=\"cal-day-tick\" ng-show=\"dayIndex === vm.openDayIndex && vm.view[vm.openDayIndex].events.length > 0\"><i class=\"glyphicon glyphicon-chevron-up\"></i> <i class=\"fa fa-chevron-up\"></i></div><div ng-include=\"\\'src/templates/calendarMonthEventsList.html\\'\"></div></div>');\n            $templateCache.put('src/templates/calendarMonthEventsList.html', '<div class=\"events-list\" ng-show=\"day.events.length > 0\"><a ng-repeat=\"event in day.events | orderBy:\\'startsAt\\' track by event.$id\" href=\"javascript:;\" ng-click=\"onEventClick({calendarEvent: event})\" class=\"pull-left event\" ng-class=\"\\'event-\\' + event.type + \\' \\' + event.cssClass\" ng-mouseenter=\"vm.highlightEvent(event, true)\" ng-mouseleave=\"vm.highlightEvent(event, false)\" tooltip-append-to-body=\"true\" tooltip-html-unsafe=\"{{ (event.startsAt | calendarDate:\\'time\\':true) + \\' - \\' + event.title }}\" mwl-draggable=\"event.editable !== false\" drop-data=\"{event: event}\"></a></div>');\n            $templateCache.put('src/templates/calendarMonthView.html', '<div class=\"cal-row-fluid cal-row-head\"><div class=\"cal-cell1\" ng-repeat=\"day in vm.weekDays track by $index\" ng-bind=\"day\"></div></div><div class=\"cal-month-box\"><div ng-repeat=\"rowOffset in vm.monthOffsets track by rowOffset\"><div class=\"cal-row-fluid cal-before-eventlist\"><div ng-repeat=\"day in vm.view | calendarLimitTo:7:rowOffset track by $index\" ng-init=\"dayIndex = vm.view.indexOf(day)\" class=\"cal-cell1 cal-cell {{ day.highlightClass }}\" ng-click=\"vm.dayClicked(day)\" ng-class=\"{pointer: day.events.length > 0}\"><div ng-include=\"\\'src/templates/calendarMonthDay.html\\'\"></div></div></div><mwl-calendar-slide-box is-open=\"vm.openRowIndex === $index && vm.view[vm.openDayIndex].events.length > 0\" events=\"vm.view[vm.openDayIndex].events\" on-event-click=\"onEventClick\" edit-event-html=\"editEventHtml\" on-edit-event-click=\"onEditEventClick\" delete-event-html=\"deleteEventHtml\" on-delete-event-click=\"onDeleteEventClick\"></mwl-calendar-slide-box></div></div>');\n            $templateCache.put('src/templates/calendarSlideBox.html', '<div class=\"cal-slide-box\" collapse=\"vm.shouldCollapse\" mwl-collapse-fallback=\"vm.shouldCollapse\"><div class=\"cal-slide-content cal-event-list\"><ul class=\"unstyled list-unstyled\"><li ng-repeat=\"event in events | orderBy:\\'startsAt\\' track by event.$id\" ng-class=\"event.cssClass\" mwl-draggable=\"event.editable !== false\" drop-data=\"{event: event}\"><span class=\"pull-left event\" ng-class=\"\\'event-\\' + event.type\"></span> &nbsp; <a href=\"javascript:;\" class=\"event-item\" ng-click=\"onEventClick({calendarEvent: event})\"><span ng-bind-html=\"vm.$sce.trustAsHtml(event.title)\"></span> <span ng-show=\"isMonthView\">(<span ng-bind=\"event.startsAt | calendarDate:\\'time\\':true\"></span>)</span> <span ng-show=\"isYearView\">(<span ng-bind=\"event.startsAt | calendarDate:\\'datetime\\':true\"></span>)</span></a> <a href=\"javascript:;\" class=\"event-item-edit\" ng-if=\"editEventHtml && event.editable !== false\" ng-bind-html=\"vm.$sce.trustAsHtml(editEventHtml)\" ng-click=\"onEditEventClick({calendarEvent: event})\"></a> <a href=\"javascript:;\" class=\"event-item-delete\" ng-if=\"deleteEventHtml && event.deletable !== false\" ng-bind-html=\"vm.$sce.trustAsHtml(deleteEventHtml)\" ng-click=\"onDeleteEventClick({calendarEvent: event})\"></a></li></ul></div></div>');\n            $templateCache.put('src/templates/calendarWeekView.html', '<div class=\"cal-week-box\" ng-class=\"{\\'cal-day-box\\': vm.showTimes}\"><div class=\"cal-row-fluid cal-row-head\"><div class=\"cal-cell1\" ng-repeat=\"day in vm.view.days track by $index\" ng-class=\"{\\n        \\'cal-day-weekend\\': day.isWeekend,\\n        \\'cal-day-past\\': day.isPast,\\n        \\'cal-day-today\\': day.isToday,\\n        \\'cal-day-future\\': day.isFuture}\" mwl-element-dimensions=\"vm.dayColumnDimensions\"><span ng-bind=\"day.weekDayLabel\"></span><br><small><span data-cal-date ng-click=\"vm.calendarCtrl.drillDown(day.date)\" class=\"pointer\" ng-bind=\"day.dayLabel\"></span></small></div></div><div class=\"cal-day-panel clearfix\" ng-style=\"{height: vm.showTimes ? (vm.dayViewHeight + \\'px\\') : \\'auto\\'}\"><mwl-calendar-hour-list day-view-start=\"dayViewStart\" day-view-end=\"dayViewEnd\" day-view-split=\"dayViewSplit\" ng-if=\"vm.showTimes\"></mwl-calendar-hour-list><div class=\"row\"><div class=\"col-xs-12\"><div class=\"cal-row-fluid\" ng-repeat=\"event in vm.view.events track by event.$id\"><div ng-class=\"\\'cal-cell\\' + (vm.showTimes ? 1 : event.daySpan) + \\' cal-offset\\' + event.dayOffset + \\' day-highlight dh-event-\\' + event.type + \\' \\' + event.cssClass\" ng-style=\"{top: (event.top + 2) + \\'px\\', position: vm.showTimes ? \\'absolute\\' : \\'inherit\\'}\" data-event-class mwl-draggable=\"event.editable !== false\" axis=\"vm.showTimes ? \\'xy\\' : \\'x\\'\" snap-grid=\"vm.showTimes ? {x: vm.dayColumnDimensions.width, y: 30} : {x: vm.dayColumnDimensions.width}\" on-drag=\"vm.tempTimeChanged(event, y)\" on-drag-end=\"vm.weekDragged(event, x, y)\"><strong ng-bind=\"(event.tempStartsAt || event.startsAt) | calendarDate:\\'time\\':true\" ng-show=\"vm.showTimes\"></strong> <a href=\"javascript:;\" ng-click=\"onEventClick({calendarEvent: event})\" class=\"event-item\" ng-bind-html=\"vm.$sce.trustAsHtml(event.title)\" tooltip-html-unsafe=\"{{ event.title }}\" tooltip-placement=\"left\" tooltip-append-to-body=\"true\"></a></div></div></div></div></div></div>');\n            $templateCache.put('src/templates/calendarYearView.html', '<div class=\"cal-year-box\"><div ng-repeat=\"rowOffset in [0, 4, 8] track by rowOffset\"><div class=\"row cal-before-eventlist\"><div class=\"span3 col-md-3 col-xs-6 cal-cell\" ng-repeat=\"month in vm.view | calendarLimitTo:4:rowOffset track by $index\" ng-init=\"monthIndex = vm.view.indexOf(month)\" ng-click=\"vm.monthClicked(month)\" ng-class=\"{pointer: month.events.length > 0, \\'cal-day-today\\': month.isToday}\" mwl-droppable on-drop=\"vm.handleEventDrop(dropData.event, month.date)\"><span class=\"pull-right\" data-cal-date ng-click=\"vm.calendarCtrl.drillDown(month.date)\" ng-bind=\"month.label\"></span> <small class=\"cal-events-num badge badge-important pull-left\" ng-show=\"month.badgeTotal > 0\" ng-bind=\"month.badgeTotal\"></small><div class=\"cal-day-tick\" ng-show=\"monthIndex === vm.openMonthIndex && vm.view[vm.openMonthIndex].events.length > 0\"><i class=\"glyphicon glyphicon-chevron-up\"></i> <i class=\"fa fa-chevron-up\"></i></div></div></div><mwl-calendar-slide-box is-open=\"vm.openRowIndex === $index && vm.view[vm.openMonthIndex].events.length > 0\" events=\"vm.view[vm.openMonthIndex].events\" on-event-click=\"onEventClick\" edit-event-html=\"editEventHtml\" on-edit-event-click=\"onEditEventClick\" delete-event-html=\"deleteEventHtml\" on-delete-event-click=\"onDeleteEventClick\"></mwl-calendar-slide-box></div></div>');\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').constant('moment', window.moment);\n    //eslint-disable-line angular/ng_window_service\n    'use strict';\n    angular.module('mwl.calendar').constant('interact', window.interact);\n    //eslint-disable-line angular/ng_window_service\n    'use strict';\n    angular.module('mwl.calendar').factory('calendarTitle', [\n        'moment',\n        'calendarConfig',\n        'calendarHelper',\n        function (moment, calendarConfig, calendarHelper) {\n            function day(currentDay) {\n                return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.day);\n            }\n            function week(currentDay) {\n                var weekTitleLabel = calendarConfig.titleFormats.week;\n                return weekTitleLabel.replace('{week}', moment(currentDay).week()).replace('{year}', moment(currentDay).format('YYYY'));\n            }\n            function month(currentDay) {\n                return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.month);\n            }\n            function year(currentDay) {\n                return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.year);\n            }\n            return {\n                day: day,\n                week: week,\n                month: month,\n                year: year\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').factory('calendarHelper', [\n        'dateFilter',\n        'moment',\n        'calendarConfig',\n        function (dateFilter, moment, calendarConfig) {\n            function formatDate(date, format) {\n                if (calendarConfig.dateFormatter === 'angular') {\n                    return dateFilter(moment(date).toDate(), format);\n                } else if (calendarConfig.dateFormatter === 'moment') {\n                    return moment(date).format(format);\n                }\n            }\n            function adjustEndDateFromStartDiff(oldStart, newStart, oldEnd) {\n                if (!oldEnd) {\n                    return oldEnd;\n                }\n                var diffInSeconds = moment(newStart).diff(moment(oldStart));\n                return moment(oldEnd).add(diffInSeconds);\n            }\n            function eventIsInPeriod(event, periodStart, periodEnd) {\n                var eventStart = moment(event.startsAt);\n                var eventEnd = moment(event.endsAt || event.startsAt);\n                periodStart = moment(periodStart);\n                periodEnd = moment(periodEnd);\n                if (angular.isDefined(event.recursOn)) {\n                    switch (event.recursOn) {\n                    case 'year':\n                        eventStart.set({ year: periodStart.year() });\n                        break;\n                    case 'month':\n                        eventStart.set({\n                            year: periodStart.year(),\n                            month: periodStart.month()\n                        });\n                        break;\n                    default:\n                        throw new Error('Invalid value (' + event.recursOn + ') given for recurs on. Can only be year, month or week.');\n                    }\n                    eventEnd = adjustEndDateFromStartDiff(event.startsAt, eventStart, eventEnd);\n                }\n                return eventStart.isAfter(periodStart) && eventStart.isBefore(periodEnd) || eventEnd.isAfter(periodStart) && eventEnd.isBefore(periodEnd) || eventStart.isBefore(periodStart) && eventEnd.isAfter(periodEnd) || eventStart.isSame(periodStart) || eventEnd.isSame(periodEnd);\n            }\n            function filterEventsInPeriod(events, startPeriod, endPeriod) {\n                return events.filter(function (event) {\n                    return eventIsInPeriod(event, startPeriod, endPeriod);\n                });\n            }\n            function getEventsInPeriod(calendarDate, period, allEvents) {\n                var startPeriod = moment(calendarDate).startOf(period);\n                var endPeriod = moment(calendarDate).endOf(period);\n                return filterEventsInPeriod(allEvents, startPeriod, endPeriod);\n            }\n            function getBadgeTotal(events) {\n                return events.filter(function (event) {\n                    return event.incrementsBadgeTotal !== false;\n                }).length;\n            }\n            function getWeekDayNames() {\n                var weekdays = [];\n                var count = 0;\n                while (count < 7) {\n                    weekdays.push(formatDate(moment().weekday(count++), calendarConfig.dateFormats.weekDay));\n                }\n                return weekdays;\n            }\n            function getYearView(events, currentDay) {\n                var view = [];\n                var eventsInPeriod = getEventsInPeriod(currentDay, 'year', events);\n                var month = moment(currentDay).startOf('year');\n                var count = 0;\n                while (count < 12) {\n                    var startPeriod = month.clone();\n                    var endPeriod = startPeriod.clone().endOf('month');\n                    var periodEvents = filterEventsInPeriod(eventsInPeriod, startPeriod, endPeriod);\n                    view.push({\n                        label: formatDate(startPeriod, calendarConfig.dateFormats.month),\n                        isToday: startPeriod.isSame(moment().startOf('month')),\n                        events: periodEvents,\n                        date: startPeriod,\n                        badgeTotal: getBadgeTotal(periodEvents)\n                    });\n                    month.add(1, 'month');\n                    count++;\n                }\n                return view;\n            }\n            function getMonthView(events, currentDay) {\n                var startOfMonth = moment(currentDay).startOf('month');\n                var day = startOfMonth.clone().startOf('week');\n                var endOfMonthView = moment(currentDay).endOf('month').endOf('week');\n                var eventsInPeriod;\n                if (calendarConfig.displayAllMonthEvents) {\n                    eventsInPeriod = filterEventsInPeriod(events, day, endOfMonthView);\n                } else {\n                    eventsInPeriod = filterEventsInPeriod(events, startOfMonth, startOfMonth.clone().endOf('month'));\n                }\n                var view = [];\n                var today = moment().startOf('day');\n                while (day.isBefore(endOfMonthView)) {\n                    var inMonth = day.month() === moment(currentDay).month();\n                    var monthEvents = [];\n                    if (inMonth || calendarConfig.displayAllMonthEvents) {\n                        monthEvents = filterEventsInPeriod(eventsInPeriod, day, day.clone().endOf('day'));\n                    }\n                    view.push({\n                        label: day.date(),\n                        date: day.clone(),\n                        inMonth: inMonth,\n                        isPast: today.isAfter(day),\n                        isToday: today.isSame(day),\n                        isFuture: today.isBefore(day),\n                        isWeekend: [\n                            0,\n                            6\n                        ].indexOf(day.day()) > -1,\n                        events: monthEvents,\n                        badgeTotal: getBadgeTotal(monthEvents)\n                    });\n                    day.add(1, 'day');\n                }\n                return view;\n            }\n            function getWeekView(events, currentDay) {\n                var startOfWeek = moment(currentDay).startOf('week');\n                var endOfWeek = moment(currentDay).endOf('week');\n                var dayCounter = startOfWeek.clone();\n                var days = [];\n                var today = moment().startOf('day');\n                while (days.length < 7) {\n                    days.push({\n                        weekDayLabel: formatDate(dayCounter, calendarConfig.dateFormats.weekDay),\n                        date: dayCounter.clone(),\n                        dayLabel: formatDate(dayCounter, calendarConfig.dateFormats.day),\n                        isPast: dayCounter.isBefore(today),\n                        isToday: dayCounter.isSame(today),\n                        isFuture: dayCounter.isAfter(today),\n                        isWeekend: [\n                            0,\n                            6\n                        ].indexOf(dayCounter.day()) > -1\n                    });\n                    dayCounter.add(1, 'day');\n                }\n                var eventsSorted = filterEventsInPeriod(events, startOfWeek, endOfWeek).map(function (event) {\n                    var eventStart = moment(event.startsAt).startOf('day');\n                    var eventEnd = moment(event.endsAt || event.startsAt).startOf('day');\n                    var weekViewStart = moment(startOfWeek).startOf('day');\n                    var weekViewEnd = moment(endOfWeek).startOf('day');\n                    var offset, span;\n                    if (eventStart.isBefore(weekViewStart) || eventStart.isSame(weekViewStart)) {\n                        offset = 0;\n                    } else {\n                        offset = eventStart.diff(weekViewStart, 'days');\n                    }\n                    if (eventEnd.isAfter(weekViewEnd)) {\n                        eventEnd = weekViewEnd;\n                    }\n                    if (eventStart.isBefore(weekViewStart)) {\n                        eventStart = weekViewStart;\n                    }\n                    span = moment(eventEnd).diff(eventStart, 'days') + 1;\n                    event.daySpan = span;\n                    event.dayOffset = offset;\n                    return event;\n                });\n                return {\n                    days: days,\n                    events: eventsSorted\n                };\n            }\n            function getDayView(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n                var dayStartHour = moment(dayViewStart || '00:00', 'HH:mm').hours();\n                var dayEndHour = moment(dayViewEnd || '23:00', 'HH:mm').hours();\n                var hourHeight = 60 / dayViewSplit * 30;\n                var calendarStart = moment(currentDay).startOf('day').add(dayStartHour, 'hours');\n                var calendarEnd = moment(currentDay).startOf('day').add(dayEndHour, 'hours');\n                var calendarHeight = (dayEndHour - dayStartHour + 1) * hourHeight;\n                var hourHeightMultiplier = hourHeight / 60;\n                var buckets = [];\n                var eventsInPeriod = filterEventsInPeriod(events, moment(currentDay).startOf('day').toDate(), moment(currentDay).endOf('day').toDate());\n                return eventsInPeriod.map(function (event) {\n                    if (moment(event.startsAt).isBefore(calendarStart)) {\n                        event.top = 0;\n                    } else {\n                        event.top = moment(event.startsAt).startOf('minute').diff(calendarStart.startOf('minute'), 'minutes') * hourHeightMultiplier - 2;\n                    }\n                    if (moment(event.endsAt || event.startsAt).isAfter(calendarEnd)) {\n                        event.height = calendarHeight - event.top;\n                    } else {\n                        var diffStart = event.startsAt;\n                        if (moment(event.startsAt).isBefore(calendarStart)) {\n                            diffStart = calendarStart.toDate();\n                        }\n                        if (!event.endsAt) {\n                            event.height = 30;\n                        } else {\n                            event.height = moment(event.endsAt || event.startsAt).diff(diffStart, 'minutes') * hourHeightMultiplier;\n                        }\n                    }\n                    if (event.top - event.height > calendarHeight) {\n                        event.height = 0;\n                    }\n                    event.left = 0;\n                    return event;\n                }).filter(function (event) {\n                    return event.height > 0;\n                }).map(function (event) {\n                    var cannotFitInABucket = true;\n                    buckets.forEach(function (bucket, bucketIndex) {\n                        var canFitInThisBucket = true;\n                        bucket.forEach(function (bucketItem) {\n                            if (eventIsInPeriod(event, bucketItem.startsAt, bucketItem.endsAt || bucketItem.startsAt) || eventIsInPeriod(bucketItem, event.startsAt, event.endsAt || event.startsAt)) {\n                                canFitInThisBucket = false;\n                            }\n                        });\n                        if (canFitInThisBucket && cannotFitInABucket) {\n                            cannotFitInABucket = false;\n                            event.left = bucketIndex * 150;\n                            buckets[bucketIndex].push(event);\n                        }\n                    });\n                    if (cannotFitInABucket) {\n                        event.left = buckets.length * 150;\n                        buckets.push([event]);\n                    }\n                    return event;\n                });\n            }\n            function getWeekViewWithTimes(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n                var weekView = getWeekView(events, currentDay);\n                var newEvents = [];\n                weekView.days.forEach(function (day) {\n                    var dayEvents = weekView.events.filter(function (event) {\n                        return moment(event.startsAt).startOf('day').isSame(moment(day.date).startOf('day'));\n                    });\n                    var newDayEvents = getDayView(dayEvents, day.date, dayViewStart, dayViewEnd, dayViewSplit);\n                    newEvents = newEvents.concat(newDayEvents);\n                });\n                weekView.events = newEvents;\n                return weekView;\n            }\n            function getDayViewHeight(dayViewStart, dayViewEnd, dayViewSplit) {\n                var dayViewStartM = moment(dayViewStart || '00:00', 'HH:mm');\n                var dayViewEndM = moment(dayViewEnd || '23:00', 'HH:mm');\n                var hourHeight = 60 / dayViewSplit * 30;\n                return (dayViewEndM.diff(dayViewStartM, 'hours') + 1) * hourHeight + 2;\n            }\n            return {\n                getWeekDayNames: getWeekDayNames,\n                getYearView: getYearView,\n                getMonthView: getMonthView,\n                getWeekView: getWeekView,\n                getDayView: getDayView,\n                getWeekViewWithTimes: getWeekViewWithTimes,\n                getDayViewHeight: getDayViewHeight,\n                adjustEndDateFromStartDiff: adjustEndDateFromStartDiff,\n                formatDate: formatDate,\n                eventIsInPeriod: eventIsInPeriod    //expose for testing only\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').service('calendarDebounce', [\n        '$timeout',\n        function ($timeout) {\n            function debounce(func, wait, immediate) {\n                var timeout;\n                return function () {\n                    var context = this, args = arguments;\n                    function later() {\n                        timeout = null;\n                        if (!immediate) {\n                            func.apply(context, args);\n                        }\n                    }\n                    var callNow = immediate && !timeout;\n                    $timeout.cancel(timeout);\n                    timeout = $timeout(later, wait);\n                    if (callNow) {\n                        func.apply(context, args);\n                    }\n                };\n            }\n            return debounce;\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').provider('calendarConfig', function () {\n        var defaultFormats = {\n            angular: {\n                date: {\n                    hour: 'ha',\n                    day: 'd MMM',\n                    month: 'MMMM',\n                    weekDay: 'EEEE',\n                    time: 'HH:mm',\n                    datetime: 'MMM d, h:mm a'\n                },\n                title: {\n                    day: 'EEEE d MMMM, yyyy',\n                    week: 'Week {week} of {year}',\n                    month: 'MMMM yyyy',\n                    year: 'yyyy'\n                }\n            },\n            moment: {\n                date: {\n                    hour: 'ha',\n                    day: 'D MMM',\n                    month: 'MMMM',\n                    weekDay: 'dddd',\n                    time: 'HH:mm',\n                    datetime: 'MMM D, h:mm a'\n                },\n                title: {\n                    day: 'dddd D MMMM, YYYY',\n                    week: 'Week {week} of {year}',\n                    month: 'MMMM YYYY',\n                    year: 'YYYY'\n                }\n            }\n        };\n        var dateFormatter = 'angular';\n        var defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n        var defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n        var showTimesOnWeekView = false;\n        var i18nStrings = {\n            eventsLabel: 'Events',\n            timeLabel: 'Time'\n        };\n        var displayAllMonthEvents = false;\n        var configProvider = this;\n        configProvider.setDateFormats = function (formats) {\n            angular.extend(defaultDateFormats, formats);\n            return configProvider;\n        };\n        configProvider.setTitleFormats = function (formats) {\n            angular.extend(defaultTitleFormats, formats);\n            return configProvider;\n        };\n        configProvider.setI18nStrings = function (strings) {\n            angular.extend(i18nStrings, strings);\n            return configProvider;\n        };\n        configProvider.setDisplayAllMonthEvents = function (value) {\n            displayAllMonthEvents = value;\n            return configProvider;\n        };\n        configProvider.setDateFormatter = function (value) {\n            if ([\n                    'angular',\n                    'moment'\n                ].indexOf(value) === -1) {\n                throw new Error('Invalid date formatter. Allowed types are angular and moment.');\n            }\n            dateFormatter = value;\n            defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n            defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n            return configProvider;\n        };\n        configProvider.showTimesOnWeekView = function (value) {\n            showTimesOnWeekView = value;\n            //experimental, and ignores the event end date\n            return configProvider;\n        };\n        configProvider.$get = function () {\n            return {\n                dateFormats: defaultDateFormats,\n                titleFormats: defaultTitleFormats,\n                i18nStrings: i18nStrings,\n                displayAllMonthEvents: displayAllMonthEvents,\n                dateFormatter: dateFormatter,\n                showTimesOnWeekView: showTimesOnWeekView\n            };\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').filter('calendarTruncateEventTitle', function () {\n        return function (string, length, boxHeight) {\n            if (!string) {\n                return '';\n            }\n            //Only truncate if if actually needs truncating\n            if (string.length >= length && string.length / 20 > boxHeight / 30) {\n                return string.substr(0, length) + '...';\n            } else {\n                return string;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').filter('calendarLimitTo', [\n        'limitToFilter',\n        function (limitToFilter) {\n            if (angular.version.minor >= 4) {\n                //1.4+ supports the begin attribute\n                return limitToFilter;\n            }\n            //Copied from the angular source. Only 1.4 has the begin functionality.\n            return function (input, limit, begin) {\n                if (Math.abs(Number(limit)) === Infinity) {\n                    limit = Number(limit);\n                } else {\n                    limit = parseInt(limit);\n                }\n                if (isNaN(limit)) {\n                    return input;\n                }\n                if (angular.isNumber(input)) {\n                    input = input.toString();\n                }\n                if (!angular.isArray(input) && !angular.isString(input)) {\n                    return input;\n                }\n                begin = !begin || isNaN(begin) ? 0 : parseInt(begin);\n                begin = begin < 0 && begin >= -input.length ? input.length + begin : begin;\n                if (limit >= 0) {\n                    return input.slice(begin, begin + limit);\n                } else if (begin === 0) {\n                    return input.slice(limit, input.length);\n                } else {\n                    return input.slice(Math.max(0, begin + limit), begin);\n                }\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').filter('calendarDate', [\n        'calendarHelper',\n        'calendarConfig',\n        function (calendarHelper, calendarConfig) {\n            function calendarDate(date, format, getFromConfig) {\n                if (getFromConfig === true) {\n                    format = calendarConfig.dateFormats[format];\n                }\n                return calendarHelper.formatDate(date, format);\n            }\n            calendarDate.$stateful = true;\n            return calendarDate;\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlElementDimensionsCtrl', [\n        '$element',\n        '$scope',\n        '$parse',\n        '$attrs',\n        function ($element, $scope, $parse, $attrs) {\n            $parse($attrs.mwlElementDimensions).assign($scope, {\n                width: $element[0].offsetWidth,\n                height: $element[0].offsetHeight\n            });\n        }\n    ]).directive('mwlElementDimensions', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlElementDimensionsCtrl'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlDroppableCtrl', [\n        '$element',\n        '$scope',\n        '$parse',\n        '$attrs',\n        'interact',\n        function ($element, $scope, $parse, $attrs, interact) {\n            if (!interact) {\n                return;\n            }\n            interact($element[0]).dropzone({\n                ondragenter: function (event) {\n                    angular.element(event.target).addClass('drop-active');\n                },\n                ondragleave: function (event) {\n                    angular.element(event.target).removeClass('drop-active');\n                },\n                ondropdeactivate: function (event) {\n                    angular.element(event.target).removeClass('drop-active');\n                },\n                ondrop: function (event) {\n                    if (event.relatedTarget.dropData) {\n                        $parse($attrs.onDrop)($scope, { dropData: event.relatedTarget.dropData });\n                        $scope.$apply();\n                    }\n                }\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                interact($element[0]).unset();\n            });\n        }\n    ]).directive('mwlDroppable', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlDroppableCtrl'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlDraggableCtrl', [\n        '$element',\n        '$scope',\n        '$window',\n        '$parse',\n        '$attrs',\n        '$timeout',\n        'interact',\n        function ($element, $scope, $window, $parse, $attrs, $timeout, interact) {\n            if (!interact) {\n                return;\n            }\n            var snap, snapGridDimensions;\n            if ($attrs.snapGrid) {\n                snapGridDimensions = $parse($attrs.snapGrid)($scope);\n                snap = { targets: [interact.createSnapGrid(snapGridDimensions)] };\n            }\n            function translateElement(elm, transformValue) {\n                return elm.css('transform', transformValue).css('-ms-transform', transformValue).css('-webkit-transform', transformValue);\n            }\n            function canDrag() {\n                return $parse($attrs.mwlDraggable)($scope);\n            }\n            function getUnitsMoved(x, y, gridDimensions) {\n                var result = {\n                    x: x,\n                    y: y\n                };\n                if (gridDimensions && gridDimensions.x) {\n                    result.x /= gridDimensions.x;\n                }\n                if (gridDimensions && gridDimensions.y) {\n                    result.y /= gridDimensions.y;\n                }\n                return result;\n            }\n            interact($element[0]).draggable({\n                snap: snap,\n                onstart: function (event) {\n                    if (canDrag()) {\n                        angular.element(event.target).addClass('dragging-active');\n                        event.target.dropData = $parse($attrs.dropData)($scope);\n                        event.target.style.pointerEvents = 'none';\n                        if ($attrs.onDragStart) {\n                            $parse($attrs.onDragStart)($scope);\n                            $scope.$apply();\n                        }\n                    }\n                },\n                onmove: function (event) {\n                    if (canDrag()) {\n                        var elm = angular.element(event.target);\n                        var x = (parseFloat(elm.attr('data-x')) || 0) + (event.dx || 0);\n                        var y = (parseFloat(elm.attr('data-y')) || 0) + (event.dy || 0);\n                        switch ($parse($attrs.axis)($scope)) {\n                        case 'x':\n                            y = 0;\n                            break;\n                        case 'y':\n                            x = 0;\n                            break;\n                        default:\n                        }\n                        if ($window.getComputedStyle(elm[0]).position === 'static') {\n                            elm.css('position', 'relative');\n                        }\n                        translateElement(elm, 'translate(' + x + 'px, ' + y + 'px)').css('z-index', 1000).attr('data-x', x).attr('data-y', y);\n                        if ($attrs.onDrag) {\n                            $parse($attrs.onDrag)($scope, getUnitsMoved(x, y, snapGridDimensions));\n                            $scope.$apply();\n                        }\n                    }\n                },\n                onend: function (event) {\n                    if (canDrag()) {\n                        var elm = angular.element(event.target);\n                        var x = elm.attr('data-x');\n                        var y = elm.attr('data-y');\n                        event.target.style.pointerEvents = 'auto';\n                        if ($attrs.onDragEnd) {\n                            $parse($attrs.onDragEnd)($scope, getUnitsMoved(x, y, snapGridDimensions));\n                            $scope.$apply();\n                        }\n                        $timeout(function () {\n                            translateElement(elm, null).removeAttr('data-x').removeAttr('data-y').removeClass('dragging-active');\n                        }, 50);\n                    }\n                }\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                interact($element[0]).unset();\n            });\n        }\n    ]).directive('mwlDraggable', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlDraggableCtrl'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlDateModifierCtrl', [\n        '$element',\n        '$attrs',\n        '$scope',\n        'moment',\n        function ($element, $attrs, $scope, moment) {\n            function onClick() {\n                if (angular.isDefined($attrs.setToToday)) {\n                    $scope.date = new Date();\n                } else if (angular.isDefined($attrs.increment)) {\n                    $scope.date = moment($scope.date).add(1, $scope.increment).toDate();\n                } else if (angular.isDefined($attrs.decrement)) {\n                    $scope.date = moment($scope.date).subtract(1, $scope.decrement).toDate();\n                }\n                $scope.$apply();\n            }\n            $element.bind('click', onClick);\n            $scope.$on('$destroy', function () {\n                $element.unbind('click', onClick);\n            });\n        }\n    ]).directive('mwlDateModifier', function () {\n        return {\n            restrict: 'A',\n            controller: 'MwlDateModifierCtrl',\n            scope: {\n                date: '=',\n                increment: '=',\n                decrement: '='\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCollapseFallbackCtrl', [\n        '$scope',\n        '$attrs',\n        '$element',\n        function ($scope, $attrs, $element) {\n            var unbindWatcher = $scope.$watch($attrs.mwlCollapseFallback, function (shouldCollapse) {\n                if (shouldCollapse) {\n                    $element.addClass('ng-hide');\n                } else {\n                    $element.removeClass('ng-hide');\n                }\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                unbindWatcher();\n            });\n        }\n    ]).directive('mwlCollapseFallback', [\n        '$injector',\n        function ($injector) {\n            if ($injector.has('collapseDirective')) {\n                return {};\n            }\n            return {\n                restrict: 'A',\n                controller: 'MwlCollapseFallbackCtrl'\n            };\n        }\n    ]);\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarYearCtrl', [\n        '$scope',\n        'moment',\n        'calendarHelper',\n        function ($scope, moment, calendarHelper) {\n            var vm = this;\n            var firstRun = true;\n            $scope.$on('calendar.refreshView', function () {\n                vm.view = calendarHelper.getYearView($scope.events, $scope.currentDay);\n                //Auto open the calendar to the current day if set\n                if ($scope.autoOpen && firstRun) {\n                    firstRun = false;\n                    vm.view.forEach(function (month) {\n                        if (moment($scope.currentDay).startOf('month').isSame(month.date)) {\n                            vm.monthClicked(month, true);\n                        }\n                    });\n                }\n            });\n            vm.monthClicked = function (month, monthClickedFirstRun) {\n                if (!monthClickedFirstRun) {\n                    $scope.onTimespanClick({ calendarDate: month.date.toDate() });\n                }\n                vm.openRowIndex = null;\n                var monthIndex = vm.view.indexOf(month);\n                if (monthIndex === vm.openMonthIndex) {\n                    //the month has been clicked and is already open\n                    vm.openMonthIndex = null;    //close the open month\n                } else {\n                    vm.openMonthIndex = monthIndex;\n                    vm.openRowIndex = Math.floor(monthIndex / 4);\n                }\n            };\n            vm.handleEventDrop = function (event, newMonthDate) {\n                var newStart = moment(event.startsAt).month(moment(newMonthDate).month());\n                var newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarDate: newMonthDate,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n        }\n    ]).directive('mwlCalendarYear', function () {\n        return {\n            templateUrl: 'src/templates/calendarYearView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEventDrop: '=',\n                onEditEventClick: '=',\n                onDeleteEventClick: '=',\n                editEventHtml: '=',\n                deleteEventHtml: '=',\n                autoOpen: '=',\n                onTimespanClick: '='\n            },\n            controller: 'MwlCalendarYearCtrl as vm',\n            link: function (scope, element, attrs, calendarCtrl) {\n                scope.vm.calendarCtrl = calendarCtrl;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarWeekCtrl', [\n        '$scope',\n        '$sce',\n        'moment',\n        'calendarHelper',\n        'calendarConfig',\n        function ($scope, $sce, moment, calendarHelper, calendarConfig) {\n            var vm = this;\n            vm.showTimes = calendarConfig.showTimesOnWeekView;\n            vm.$sce = $sce;\n            $scope.$on('calendar.refreshView', function () {\n                vm.dayViewHeight = calendarHelper.getDayViewHeight($scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n                if (vm.showTimes) {\n                    vm.view = calendarHelper.getWeekViewWithTimes($scope.events, $scope.currentDay, $scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n                } else {\n                    vm.view = calendarHelper.getWeekView($scope.events, $scope.currentDay);\n                }\n            });\n            vm.weekDragged = function (event, daysDiff, minuteChunksMoved) {\n                var newStart = moment(event.startsAt).add(daysDiff, 'days');\n                var newEnd = moment(event.endsAt).add(daysDiff, 'days');\n                if (minuteChunksMoved) {\n                    var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                    newStart = newStart.add(minutesDiff, 'minutes');\n                    newEnd = newEnd.add(minutesDiff, 'minutes');\n                }\n                delete event.tempStartsAt;\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n            vm.tempTimeChanged = function (event, minuteChunksMoved) {\n                var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                event.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n            };\n        }\n    ]).directive('mwlCalendarWeek', function () {\n        return {\n            templateUrl: 'src/templates/calendarWeekView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEventDrop: '=',\n                dayViewStart: '=',\n                dayViewEnd: '=',\n                dayViewSplit: '='\n            },\n            controller: 'MwlCalendarWeekCtrl as vm',\n            link: function (scope, element, attrs, calendarCtrl) {\n                scope.vm.calendarCtrl = calendarCtrl;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarSlideBoxCtrl', [\n        '$scope',\n        '$sce',\n        function ($scope, $sce) {\n            var vm = this;\n            vm.$sce = $sce;\n            var unbindWatcher = $scope.$watch('isOpen', function (isOpen) {\n                vm.shouldCollapse = !isOpen;\n            });\n            var unbindDestroy = $scope.$on('$destroy', function () {\n                unbindDestroy();\n                unbindWatcher();\n            });\n        }\n    ]).directive('mwlCalendarSlideBox', function () {\n        return {\n            restrict: 'EA',\n            templateUrl: 'src/templates/calendarSlideBox.html',\n            replace: true,\n            controller: 'MwlCalendarSlideBoxCtrl as vm',\n            require: [\n                '^?mwlCalendarMonth',\n                '^?mwlCalendarYear'\n            ],\n            link: function (scope, elm, attrs, ctrls) {\n                scope.isMonthView = !!ctrls[0];\n                scope.isYearView = !!ctrls[1];\n            },\n            scope: {\n                isOpen: '=',\n                events: '=',\n                onEventClick: '=',\n                editEventHtml: '=',\n                onEditEventClick: '=',\n                deleteEventHtml: '=',\n                onDeleteEventClick: '='\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarMonthCtrl', [\n        '$scope',\n        'moment',\n        'calendarHelper',\n        function ($scope, moment, calendarHelper) {\n            var vm = this;\n            var firstRun = true;\n            $scope.$on('calendar.refreshView', function () {\n                vm.weekDays = calendarHelper.getWeekDayNames();\n                vm.view = calendarHelper.getMonthView($scope.events, $scope.currentDay);\n                var rows = Math.floor(vm.view.length / 7);\n                vm.monthOffsets = [];\n                for (var i = 0; i < rows; i++) {\n                    vm.monthOffsets.push(i * 7);\n                }\n                //Auto open the calendar to the current day if set\n                if ($scope.autoOpen && firstRun) {\n                    firstRun = false;\n                    vm.view.forEach(function (day) {\n                        if (day.inMonth && moment($scope.currentDay).startOf('day').isSame(day.date)) {\n                            vm.dayClicked(day, true);\n                        }\n                    });\n                }\n            });\n            vm.dayClicked = function (day, dayClickedFirstRun) {\n                if (!dayClickedFirstRun) {\n                    $scope.onTimespanClick({ calendarDate: day.date.toDate() });\n                }\n                vm.openRowIndex = null;\n                var dayIndex = vm.view.indexOf(day);\n                if (dayIndex === vm.openDayIndex) {\n                    //the day has been clicked and is already open\n                    vm.openDayIndex = null;    //close the open day\n                } else {\n                    vm.openDayIndex = dayIndex;\n                    vm.openRowIndex = Math.floor(dayIndex / 7);\n                }\n            };\n            vm.highlightEvent = function (event, shouldAddClass) {\n                vm.view.forEach(function (day) {\n                    delete day.highlightClass;\n                    if (shouldAddClass) {\n                        var dayContainsEvent = day.events.indexOf(event) > -1;\n                        if (dayContainsEvent) {\n                            day.highlightClass = 'day-highlight dh-event-' + event.type;\n                        }\n                    }\n                });\n            };\n            vm.handleEventDrop = function (event, newDayDate) {\n                var newStart = moment(event.startsAt).date(moment(newDayDate).date()).month(moment(newDayDate).month());\n                var newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarDate: newDayDate,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n        }\n    ]).directive('mwlCalendarMonth', function () {\n        return {\n            templateUrl: 'src/templates/calendarMonthView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEditEventClick: '=',\n                onDeleteEventClick: '=',\n                onEventDrop: '=',\n                editEventHtml: '=',\n                deleteEventHtml: '=',\n                autoOpen: '=',\n                onTimespanClick: '='\n            },\n            controller: 'MwlCalendarMonthCtrl as vm',\n            link: function (scope, element, attrs, calendarCtrl) {\n                scope.vm.calendarCtrl = calendarCtrl;\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarHourListCtrl', [\n        '$scope',\n        'moment',\n        'calendarConfig',\n        'calendarHelper',\n        function ($scope, moment, calendarConfig, calendarHelper) {\n            var vm = this;\n            var dayViewStart, dayViewEnd;\n            function updateDays() {\n                dayViewStart = moment($scope.dayViewStart || '00:00', 'HH:mm');\n                dayViewEnd = moment($scope.dayViewEnd || '23:00', 'HH:mm');\n                vm.dayViewSplit = parseInt($scope.dayViewSplit);\n                vm.hours = [];\n                var dayCounter = moment(dayViewStart);\n                for (var i = 0; i <= dayViewEnd.diff(dayViewStart, 'hours'); i++) {\n                    vm.hours.push({ label: calendarHelper.formatDate(dayCounter, calendarConfig.dateFormats.hour) });\n                    dayCounter.add(1, 'hour');\n                }\n            }\n            var originalLocale = moment.locale();\n            $scope.$on('calendar.refreshView', function () {\n                if (originalLocale !== moment.locale()) {\n                    originalLocale = moment.locale();\n                    updateDays();\n                }\n            });\n            updateDays();\n        }\n    ]).directive('mwlCalendarHourList', function () {\n        return {\n            restrict: 'EA',\n            templateUrl: 'src/templates/calendarHourList.html',\n            controller: 'MwlCalendarHourListCtrl as vm',\n            scope: {\n                dayViewStart: '=',\n                dayViewEnd: '=',\n                dayViewSplit: '='\n            }\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarDayCtrl', [\n        '$scope',\n        '$timeout',\n        '$sce',\n        'moment',\n        'calendarHelper',\n        'calendarConfig',\n        function ($scope, $timeout, $sce, moment, calendarHelper, calendarConfig) {\n            var vm = this;\n            vm.calendarConfig = calendarConfig;\n            vm.$sce = $sce;\n            $scope.$on('calendar.refreshView', function () {\n                vm.dayViewHeight = calendarHelper.getDayViewHeight($scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n                vm.view = calendarHelper.getDayView($scope.events, $scope.currentDay, $scope.dayViewStart, $scope.dayViewEnd, $scope.dayViewSplit);\n            });\n            vm.timeChanged = function (event, minuteChunksMoved) {\n                var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                var newStart = moment(event.startsAt).add(minutesDiff, 'minutes');\n                var newEnd = moment(event.endsAt).add(minutesDiff, 'minutes');\n                delete event.tempStartsAt;\n                $scope.onEventDrop({\n                    calendarEvent: event,\n                    calendarNewEventStart: newStart.toDate(),\n                    calendarNewEventEnd: newEnd.toDate()\n                });\n            };\n            vm.tempTimeChanged = function (event, minuteChunksMoved) {\n                var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n                event.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n            };\n        }\n    ]).directive('mwlCalendarDay', function () {\n        return {\n            templateUrl: 'src/templates/calendarDayView.html',\n            restrict: 'EA',\n            require: '^mwlCalendar',\n            scope: {\n                events: '=',\n                currentDay: '=',\n                onEventClick: '=',\n                onEventDrop: '=',\n                dayViewStart: '=',\n                dayViewEnd: '=',\n                dayViewSplit: '='\n            },\n            controller: 'MwlCalendarDayCtrl as vm'\n        };\n    });\n    'use strict';\n    angular.module('mwl.calendar').controller('MwlCalendarCtrl', [\n        '$scope',\n        '$timeout',\n        '$window',\n        '$locale',\n        'moment',\n        'calendarTitle',\n        'calendarDebounce',\n        function ($scope, $timeout, $window, $locale, moment, calendarTitle, calendarDebounce) {\n            var vm = this;\n            $scope.events = $scope.events || [];\n            vm.changeView = function (view, newDay) {\n                $scope.view = view;\n                $scope.currentDay = newDay;\n            };\n            vm.drillDown = function (date) {\n                var rawDate = moment(date).toDate();\n                var nextView = {\n                    year: 'month',\n                    month: 'day',\n                    week: 'day'\n                };\n                if ($scope.onDrillDownClick({\n                        calendarDate: rawDate,\n                        calendarNextView: nextView[$scope.view]\n                    }) !== false) {\n                    vm.changeView(nextView[$scope.view], rawDate);\n                }\n            };\n            var previousDate = moment($scope.currentDay);\n            var previousView = angular.copy($scope.view);\n            //Use a debounce to prevent it being called 3 times on initialisation\n            var refreshCalendar = calendarDebounce(function () {\n                if (calendarTitle[$scope.view]) {\n                    $scope.viewTitle = calendarTitle[$scope.view]($scope.currentDay);\n                }\n                $scope.events = $scope.events.map(function (event, index) {\n                    Object.defineProperty(event, '$id', {\n                        enumerable: false,\n                        value: index\n                    });\n                    return event;\n                });\n                //if on-timespan-click=\"calendarDay = calendarDate\" is set then dont update the view as nothing needs to change\n                var currentDate = moment($scope.currentDay);\n                var shouldUpdate = true;\n                if (previousDate.clone().startOf($scope.view).isSame(currentDate.clone().startOf($scope.view)) && !previousDate.isSame(currentDate) && $scope.view === previousView) {\n                    shouldUpdate = false;\n                }\n                previousDate = currentDate;\n                previousView = angular.copy($scope.view);\n                if (shouldUpdate) {\n                    $scope.$broadcast('calendar.refreshView');\n                }\n            }, 50);\n            //Auto update the calendar when the locale changes\n            var unbindLocaleWatcher = $scope.$watch(function () {\n                return moment.locale() + $locale.id;\n            }, refreshCalendar);\n            var unbindOnDestroy = [];\n            unbindOnDestroy.push(unbindLocaleWatcher);\n            //Refresh the calendar when any of these variables change.\n            unbindOnDestroy.push($scope.$watch('currentDay', refreshCalendar));\n            unbindOnDestroy.push($scope.$watch('view', refreshCalendar));\n            unbindOnDestroy.push($scope.$watch('events', refreshCalendar, true));\n            //Remove any watchers when the calendar is destroyed\n            var unbindDestroyListener = $scope.$on('$destroy', function () {\n                unbindOnDestroy.forEach(function (unbind) {\n                    unbind();\n                });\n            });\n            unbindOnDestroy.push(unbindDestroyListener);\n        }\n    ]).directive('mwlCalendar', function () {\n        return {\n            templateUrl: 'src/templates/calendar.html',\n            restrict: 'EA',\n            scope: {\n                events: '=',\n                view: '=',\n                viewTitle: '=',\n                currentDay: '=',\n                editEventHtml: '=',\n                deleteEventHtml: '=',\n                autoOpen: '=',\n                onEventClick: '&',\n                onEventDrop: '&',\n                onEditEventClick: '&',\n                onDeleteEventClick: '&',\n                onTimespanClick: '&',\n                onDrillDownClick: '&',\n                dayViewStart: '@',\n                dayViewEnd: '@',\n                dayViewSplit: '@'\n            },\n            controller: 'MwlCalendarCtrl as vm'\n        };\n    });\n}(window, angular));","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .constant('moment', window.moment); //eslint-disable-line angular/ng_window_service\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .constant('interact', window.interact); //eslint-disable-line angular/ng_window_service\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .factory('calendarTitle', function(moment, calendarConfig, calendarHelper) {\n\n    function day(currentDay) {\n      return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.day);\n    }\n\n    function week(currentDay) {\n      var weekTitleLabel = calendarConfig.titleFormats.week;\n      return weekTitleLabel.replace('{week}', moment(currentDay).week()).replace('{year}', moment(currentDay).format('YYYY'));\n    }\n\n    function month(currentDay) {\n      return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.month);\n    }\n\n    function year(currentDay) {\n      return calendarHelper.formatDate(currentDay, calendarConfig.titleFormats.year);\n    }\n\n    return {\n      day: day,\n      week: week,\n      month: month,\n      year: year\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .factory('calendarHelper', function(dateFilter, moment, calendarConfig) {\n\n    function formatDate(date, format) {\n      if (calendarConfig.dateFormatter === 'angular') {\n        return dateFilter(moment(date).toDate(), format);\n      } else if (calendarConfig.dateFormatter === 'moment') {\n        return moment(date).format(format);\n      }\n    }\n\n    function adjustEndDateFromStartDiff(oldStart, newStart, oldEnd) {\n      if (!oldEnd) {\n        return oldEnd;\n      }\n      var diffInSeconds = moment(newStart).diff(moment(oldStart));\n      return moment(oldEnd).add(diffInSeconds);\n    }\n\n    function eventIsInPeriod(event, periodStart, periodEnd) {\n\n      var eventStart = moment(event.startsAt);\n      var eventEnd = moment(event.endsAt || event.startsAt);\n      periodStart = moment(periodStart);\n      periodEnd = moment(periodEnd);\n\n      if (angular.isDefined(event.recursOn)) {\n\n        switch (event.recursOn) {\n          case 'year':\n            eventStart.set({\n              year: periodStart.year()\n            });\n            break;\n\n          case 'month':\n            eventStart.set({\n              year: periodStart.year(),\n              month: periodStart.month()\n            });\n            break;\n\n          default:\n            throw new Error('Invalid value (' + event.recursOn + ') given for recurs on. Can only be year, month or week.');\n        }\n\n        eventEnd = adjustEndDateFromStartDiff(event.startsAt, eventStart, eventEnd);\n\n      }\n\n      return (eventStart.isAfter(periodStart) && eventStart.isBefore(periodEnd)) ||\n        (eventEnd.isAfter(periodStart) && eventEnd.isBefore(periodEnd)) ||\n        (eventStart.isBefore(periodStart) && eventEnd.isAfter(periodEnd)) ||\n        eventStart.isSame(periodStart) ||\n        eventEnd.isSame(periodEnd);\n\n    }\n\n    function filterEventsInPeriod(events, startPeriod, endPeriod) {\n      return events.filter(function(event) {\n        return eventIsInPeriod(event, startPeriod, endPeriod);\n      });\n    }\n\n    function getEventsInPeriod(calendarDate, period, allEvents) {\n      var startPeriod = moment(calendarDate).startOf(period);\n      var endPeriod = moment(calendarDate).endOf(period);\n      return filterEventsInPeriod(allEvents, startPeriod, endPeriod);\n    }\n\n    function getBadgeTotal(events) {\n      return events.filter(function(event) {\n        return event.incrementsBadgeTotal !== false;\n      }).length;\n    }\n\n    function getWeekDayNames() {\n      var weekdays = [];\n      var count = 0;\n      while (count < 7) {\n        weekdays.push(formatDate(moment().weekday(count++), calendarConfig.dateFormats.weekDay));\n      }\n      return weekdays;\n    }\n\n    function getYearView(events, currentDay) {\n\n      var view = [];\n      var eventsInPeriod = getEventsInPeriod(currentDay, 'year', events);\n      var month = moment(currentDay).startOf('year');\n      var count = 0;\n      while (count < 12) {\n        var startPeriod = month.clone();\n        var endPeriod = startPeriod.clone().endOf('month');\n        var periodEvents = filterEventsInPeriod(eventsInPeriod, startPeriod, endPeriod);\n        view.push({\n          label: formatDate(startPeriod, calendarConfig.dateFormats.month),\n          isToday: startPeriod.isSame(moment().startOf('month')),\n          events: periodEvents,\n          date: startPeriod,\n          badgeTotal: getBadgeTotal(periodEvents)\n        });\n\n        month.add(1, 'month');\n        count++;\n      }\n\n      return view;\n\n    }\n\n    function getMonthView(events, currentDay) {\n\n      var startOfMonth = moment(currentDay).startOf('month');\n      var day = startOfMonth.clone().startOf('week');\n      var endOfMonthView = moment(currentDay).endOf('month').endOf('week');\n      var eventsInPeriod;\n      if (calendarConfig.displayAllMonthEvents) {\n        eventsInPeriod = filterEventsInPeriod(events, day, endOfMonthView);\n      } else {\n        eventsInPeriod = filterEventsInPeriod(events, startOfMonth, startOfMonth.clone().endOf('month'));\n      }\n      var view = [];\n      var today = moment().startOf('day');\n\n      while (day.isBefore(endOfMonthView)) {\n\n        var inMonth = day.month() === moment(currentDay).month();\n        var monthEvents = [];\n        if (inMonth || calendarConfig.displayAllMonthEvents) {\n          monthEvents = filterEventsInPeriod(eventsInPeriod, day, day.clone().endOf('day'));\n        }\n\n        view.push({\n          label: day.date(),\n          date: day.clone(),\n          inMonth: inMonth,\n          isPast: today.isAfter(day),\n          isToday: today.isSame(day),\n          isFuture: today.isBefore(day),\n          isWeekend: [0, 6].indexOf(day.day()) > -1,\n          events: monthEvents,\n          badgeTotal: getBadgeTotal(monthEvents)\n        });\n\n        day.add(1, 'day');\n      }\n\n      return view;\n\n    }\n\n    function getWeekView(events, currentDay) {\n\n      var startOfWeek = moment(currentDay).startOf('week');\n      var endOfWeek = moment(currentDay).endOf('week');\n      var dayCounter = startOfWeek.clone();\n      var days = [];\n      var today = moment().startOf('day');\n      while (days.length < 7) {\n        days.push({\n          weekDayLabel: formatDate(dayCounter, calendarConfig.dateFormats.weekDay),\n          date: dayCounter.clone(),\n          dayLabel: formatDate(dayCounter, calendarConfig.dateFormats.day),\n          isPast: dayCounter.isBefore(today),\n          isToday: dayCounter.isSame(today),\n          isFuture: dayCounter.isAfter(today),\n          isWeekend: [0, 6].indexOf(dayCounter.day()) > -1\n        });\n        dayCounter.add(1, 'day');\n      }\n\n      var eventsSorted = filterEventsInPeriod(events, startOfWeek, endOfWeek).map(function(event) {\n\n        var eventStart = moment(event.startsAt).startOf('day');\n        var eventEnd = moment(event.endsAt || event.startsAt).startOf('day');\n        var weekViewStart = moment(startOfWeek).startOf('day');\n        var weekViewEnd = moment(endOfWeek).startOf('day');\n        var offset, span;\n\n        if (eventStart.isBefore(weekViewStart) || eventStart.isSame(weekViewStart)) {\n          offset = 0;\n        } else {\n          offset = eventStart.diff(weekViewStart, 'days');\n        }\n\n        if (eventEnd.isAfter(weekViewEnd)) {\n          eventEnd = weekViewEnd;\n        }\n\n        if (eventStart.isBefore(weekViewStart)) {\n          eventStart = weekViewStart;\n        }\n\n        span = moment(eventEnd).diff(eventStart, 'days') + 1;\n\n        event.daySpan = span;\n        event.dayOffset = offset;\n\n        return event;\n      });\n\n      return {days: days, events: eventsSorted};\n\n    }\n\n    function getDayView(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n\n      var dayStartHour = moment(dayViewStart || '00:00', 'HH:mm').hours();\n      var dayEndHour = moment(dayViewEnd || '23:00', 'HH:mm').hours();\n      var hourHeight = (60 / dayViewSplit) * 30;\n      var calendarStart = moment(currentDay).startOf('day').add(dayStartHour, 'hours');\n      var calendarEnd = moment(currentDay).startOf('day').add(dayEndHour, 'hours');\n      var calendarHeight = (dayEndHour - dayStartHour + 1) * hourHeight;\n      var hourHeightMultiplier = hourHeight / 60;\n      var buckets = [];\n      var eventsInPeriod = filterEventsInPeriod(\n        events,\n        moment(currentDay).startOf('day').toDate(),\n        moment(currentDay).endOf('day').toDate()\n      );\n\n      return eventsInPeriod.map(function(event) {\n        if (moment(event.startsAt).isBefore(calendarStart)) {\n          event.top = 0;\n        } else {\n          event.top = (moment(event.startsAt).startOf('minute').diff(calendarStart.startOf('minute'), 'minutes') * hourHeightMultiplier) - 2;\n        }\n\n        if (moment(event.endsAt || event.startsAt).isAfter(calendarEnd)) {\n          event.height = calendarHeight - event.top;\n        } else {\n          var diffStart = event.startsAt;\n          if (moment(event.startsAt).isBefore(calendarStart)) {\n            diffStart = calendarStart.toDate();\n          }\n          if (!event.endsAt) {\n            event.height = 30;\n          } else {\n            event.height = moment(event.endsAt || event.startsAt).diff(diffStart, 'minutes') * hourHeightMultiplier;\n          }\n        }\n\n        if (event.top - event.height > calendarHeight) {\n          event.height = 0;\n        }\n\n        event.left = 0;\n\n        return event;\n      }).filter(function(event) {\n        return event.height > 0;\n      }).map(function(event) {\n\n        var cannotFitInABucket = true;\n        buckets.forEach(function(bucket, bucketIndex) {\n          var canFitInThisBucket = true;\n\n          bucket.forEach(function(bucketItem) {\n            if (eventIsInPeriod(event, bucketItem.startsAt, bucketItem.endsAt || bucketItem.startsAt) ||\n              eventIsInPeriod(bucketItem, event.startsAt, event.endsAt || event.startsAt)) {\n              canFitInThisBucket = false;\n            }\n          });\n\n          if (canFitInThisBucket && cannotFitInABucket) {\n            cannotFitInABucket = false;\n            event.left = bucketIndex * 150;\n            buckets[bucketIndex].push(event);\n          }\n\n        });\n\n        if (cannotFitInABucket) {\n          event.left = buckets.length * 150;\n          buckets.push([event]);\n        }\n\n        return event;\n\n      });\n\n    }\n\n    function getWeekViewWithTimes(events, currentDay, dayViewStart, dayViewEnd, dayViewSplit) {\n      var weekView = getWeekView(events, currentDay);\n      var newEvents = [];\n      weekView.days.forEach(function(day) {\n        var dayEvents = weekView.events.filter(function(event) {\n          return moment(event.startsAt).startOf('day').isSame(moment(day.date).startOf('day'));\n        });\n        var newDayEvents = getDayView(\n          dayEvents,\n          day.date,\n          dayViewStart,\n          dayViewEnd,\n          dayViewSplit\n        );\n        newEvents = newEvents.concat(newDayEvents);\n      });\n      weekView.events = newEvents;\n      return weekView;\n    }\n\n    function getDayViewHeight(dayViewStart, dayViewEnd, dayViewSplit) {\n      var dayViewStartM = moment(dayViewStart || '00:00', 'HH:mm');\n      var dayViewEndM = moment(dayViewEnd || '23:00', 'HH:mm');\n      var hourHeight = (60 / dayViewSplit) * 30;\n      return ((dayViewEndM.diff(dayViewStartM, 'hours') + 1) * hourHeight) + 2;\n    }\n\n    return {\n      getWeekDayNames: getWeekDayNames,\n      getYearView: getYearView,\n      getMonthView: getMonthView,\n      getWeekView: getWeekView,\n      getDayView: getDayView,\n      getWeekViewWithTimes: getWeekViewWithTimes,\n      getDayViewHeight: getDayViewHeight,\n      adjustEndDateFromStartDiff: adjustEndDateFromStartDiff,\n      formatDate: formatDate,\n      eventIsInPeriod: eventIsInPeriod //expose for testing only\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .service('calendarDebounce', function($timeout) {\n\n    function debounce(func, wait, immediate) {\n      var timeout;\n      return function() {\n        var context = this, args = arguments;\n        function later() {\n          timeout = null;\n          if (!immediate) {\n            func.apply(context, args);\n          }\n        }\n        var callNow = immediate && !timeout;\n        $timeout.cancel(timeout);\n        timeout = $timeout(later, wait);\n        if (callNow) {\n          func.apply(context, args);\n        }\n      };\n    }\n\n    return debounce;\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .provider('calendarConfig', function() {\n\n    var defaultFormats = {\n      angular: {\n        date: {\n          hour: 'ha',\n          day: 'd MMM',\n          month: 'MMMM',\n          weekDay: 'EEEE',\n          time: 'HH:mm',\n          datetime: 'MMM d, h:mm a'\n        },\n        title: {\n          day: 'EEEE d MMMM, yyyy',\n          week: 'Week {week} of {year}',\n          month: 'MMMM yyyy',\n          year: 'yyyy'\n        }\n      },\n      moment: {\n        date: {\n          hour: 'ha',\n          day: 'D MMM',\n          month: 'MMMM',\n          weekDay: 'dddd',\n          time: 'HH:mm',\n          datetime: 'MMM D, h:mm a'\n        },\n        title: {\n          day: 'dddd D MMMM, YYYY',\n          week: 'Week {week} of {year}',\n          month: 'MMMM YYYY',\n          year: 'YYYY'\n        }\n      }\n    };\n\n    var dateFormatter = 'angular';\n    var defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n    var defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n    var showTimesOnWeekView = false;\n\n    var i18nStrings = {\n      eventsLabel: 'Events',\n      timeLabel: 'Time'\n    };\n\n    var displayAllMonthEvents = false;\n\n    var configProvider = this;\n\n    configProvider.setDateFormats = function(formats) {\n      angular.extend(defaultDateFormats, formats);\n      return configProvider;\n    };\n\n    configProvider.setTitleFormats = function(formats) {\n      angular.extend(defaultTitleFormats, formats);\n      return configProvider;\n    };\n\n    configProvider.setI18nStrings = function(strings) {\n      angular.extend(i18nStrings, strings);\n      return configProvider;\n    };\n\n    configProvider.setDisplayAllMonthEvents = function(value) {\n      displayAllMonthEvents = value;\n      return configProvider;\n    };\n\n    configProvider.setDateFormatter = function(value) {\n      if (['angular', 'moment'].indexOf(value) === -1) {\n        throw new Error('Invalid date formatter. Allowed types are angular and moment.');\n      }\n      dateFormatter = value;\n      defaultDateFormats = angular.copy(defaultFormats[dateFormatter].date);\n      defaultTitleFormats = angular.copy(defaultFormats[dateFormatter].title);\n      return configProvider;\n    };\n\n    configProvider.showTimesOnWeekView = function(value) {\n      showTimesOnWeekView = value; //experimental, and ignores the event end date\n      return configProvider;\n    };\n\n    configProvider.$get = function() {\n      return {\n        dateFormats: defaultDateFormats,\n        titleFormats: defaultTitleFormats,\n        i18nStrings: i18nStrings,\n        displayAllMonthEvents: displayAllMonthEvents,\n        dateFormatter: dateFormatter,\n        showTimesOnWeekView: showTimesOnWeekView\n      };\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .filter('calendarTruncateEventTitle', function() {\n\n    return function(string, length, boxHeight) {\n      if (!string) {\n        return '';\n      }\n\n      //Only truncate if if actually needs truncating\n      if (string.length >= length && string.length / 20 > boxHeight / 30) {\n        return string.substr(0, length) + '...';\n      } else {\n        return string;\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .filter('calendarLimitTo', function(limitToFilter) {\n\n    if (angular.version.minor >= 4) { //1.4+ supports the begin attribute\n      return limitToFilter;\n    }\n\n    //Copied from the angular source. Only 1.4 has the begin functionality.\n    return function(input, limit, begin) {\n      if (Math.abs(Number(limit)) === Infinity) {\n        limit = Number(limit);\n      } else {\n        limit = parseInt(limit);\n      }\n      if (isNaN(limit)) {\n        return input;\n      }\n\n      if (angular.isNumber(input)) {\n        input = input.toString();\n      }\n      if (!angular.isArray(input) && !angular.isString(input)) {\n        return input;\n      }\n\n      begin = (!begin || isNaN(begin)) ? 0 : parseInt(begin);\n      begin = (begin < 0 && begin >= -input.length) ? input.length + begin : begin;\n\n      if (limit >= 0) {\n        return input.slice(begin, begin + limit);\n      } else if (begin === 0) {\n        return input.slice(limit, input.length);\n      } else {\n        return input.slice(Math.max(0, begin + limit), begin);\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .filter('calendarDate', function(calendarHelper, calendarConfig) {\n\n    function calendarDate(date, format, getFromConfig) {\n\n      if (getFromConfig === true) {\n        format = calendarConfig.dateFormats[format];\n      }\n\n      return calendarHelper.formatDate(date, format);\n\n    }\n\n    calendarDate.$stateful = true;\n\n    return calendarDate;\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlElementDimensionsCtrl', function($element, $scope, $parse, $attrs) {\n\n    $parse($attrs.mwlElementDimensions).assign($scope, {\n      width: $element[0].offsetWidth,\n      height: $element[0].offsetHeight\n    });\n\n  })\n  .directive('mwlElementDimensions', function() {\n\n    return {\n      restrict: 'A',\n      controller: 'MwlElementDimensionsCtrl'\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlDroppableCtrl', function($element, $scope, $parse, $attrs, interact) {\n\n    if (!interact) {\n      return;\n    }\n\n    interact($element[0]).dropzone({\n      ondragenter: function(event) {\n        angular.element(event.target).addClass('drop-active');\n      },\n      ondragleave: function(event) {\n        angular.element(event.target).removeClass('drop-active');\n      },\n      ondropdeactivate: function(event) {\n        angular.element(event.target).removeClass('drop-active');\n      },\n      ondrop: function(event) {\n        if (event.relatedTarget.dropData) {\n          $parse($attrs.onDrop)($scope, {dropData: event.relatedTarget.dropData});\n          $scope.$apply();\n        }\n      }\n    });\n\n    var unbindDestroy = $scope.$on('$destroy', function() {\n      unbindDestroy();\n      interact($element[0]).unset();\n    });\n\n  })\n  .directive('mwlDroppable', function() {\n\n    return {\n      restrict: 'A',\n      controller: 'MwlDroppableCtrl'\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlDraggableCtrl', function($element, $scope, $window, $parse, $attrs, $timeout, interact) {\n\n    if (!interact) {\n      return;\n    }\n\n    var snap, snapGridDimensions;\n    if ($attrs.snapGrid) {\n      snapGridDimensions = $parse($attrs.snapGrid)($scope);\n      snap = {\n        targets: [\n          interact.createSnapGrid(snapGridDimensions)\n        ]\n      };\n    }\n\n    function translateElement(elm, transformValue) {\n      return elm\n        .css('transform', transformValue)\n        .css('-ms-transform', transformValue)\n        .css('-webkit-transform', transformValue);\n    }\n\n    function canDrag() {\n      return $parse($attrs.mwlDraggable)($scope);\n    }\n\n    function getUnitsMoved(x, y, gridDimensions) {\n\n      var result = {x: x, y: y};\n\n      if (gridDimensions && gridDimensions.x) {\n        result.x /= gridDimensions.x;\n      }\n\n      if (gridDimensions && gridDimensions.y) {\n        result.y /= gridDimensions.y;\n      }\n\n      return result;\n\n    }\n\n    interact($element[0]).draggable({\n      snap: snap,\n      onstart: function(event) {\n        if (canDrag()) {\n          angular.element(event.target).addClass('dragging-active');\n          event.target.dropData = $parse($attrs.dropData)($scope);\n          event.target.style.pointerEvents = 'none';\n          if ($attrs.onDragStart) {\n            $parse($attrs.onDragStart)($scope);\n            $scope.$apply();\n          }\n        }\n      },\n      onmove: function(event) {\n\n        if (canDrag()) {\n          var elm = angular.element(event.target);\n          var x = (parseFloat(elm.attr('data-x')) || 0) + (event.dx || 0);\n          var y = (parseFloat(elm.attr('data-y')) || 0) + (event.dy || 0);\n\n          switch ($parse($attrs.axis)($scope)) {\n            case 'x':\n              y = 0;\n              break;\n\n            case 'y':\n              x = 0;\n              break;\n\n            default:\n          }\n\n          if ($window.getComputedStyle(elm[0]).position === 'static') {\n            elm.css('position', 'relative');\n          }\n\n          translateElement(elm, 'translate(' + x + 'px, ' + y + 'px)')\n            .css('z-index', 1000)\n            .attr('data-x', x)\n            .attr('data-y', y);\n\n          if ($attrs.onDrag) {\n            $parse($attrs.onDrag)($scope, getUnitsMoved(x, y, snapGridDimensions));\n            $scope.$apply();\n          }\n        }\n\n      },\n      onend: function(event) {\n\n        if (canDrag()) {\n          var elm = angular.element(event.target);\n          var x = elm.attr('data-x');\n          var y = elm.attr('data-y');\n\n          event.target.style.pointerEvents = 'auto';\n          if ($attrs.onDragEnd) {\n            $parse($attrs.onDragEnd)($scope, getUnitsMoved(x, y, snapGridDimensions));\n            $scope.$apply();\n          }\n\n          $timeout(function() {\n            translateElement(elm, null)\n              .removeAttr('data-x')\n              .removeAttr('data-y')\n              .removeClass('dragging-active');\n          }, 50);\n        }\n\n      }\n    });\n\n    var unbindDestroy = $scope.$on('$destroy', function() {\n      unbindDestroy();\n      interact($element[0]).unset();\n    });\n\n  })\n  .directive('mwlDraggable', function() {\n\n    return {\n      restrict: 'A',\n      controller: 'MwlDraggableCtrl'\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlDateModifierCtrl', function($element, $attrs, $scope, moment) {\n\n    function onClick() {\n      if (angular.isDefined($attrs.setToToday)) {\n        $scope.date = new Date();\n      } else if (angular.isDefined($attrs.increment)) {\n        $scope.date = moment($scope.date).add(1, $scope.increment).toDate();\n      } else if (angular.isDefined($attrs.decrement)) {\n        $scope.date = moment($scope.date).subtract(1, $scope.decrement).toDate();\n      }\n      $scope.$apply();\n    }\n\n    $element.bind('click', onClick);\n\n    $scope.$on('$destroy', function() {\n      $element.unbind('click', onClick);\n    });\n\n  })\n  .directive('mwlDateModifier', function() {\n\n    return {\n      restrict: 'A',\n      controller: 'MwlDateModifierCtrl',\n      scope: {\n        date: '=',\n        increment: '=',\n        decrement: '='\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCollapseFallbackCtrl', function($scope, $attrs, $element) {\n    var unbindWatcher = $scope.$watch($attrs.mwlCollapseFallback, function(shouldCollapse) {\n      if (shouldCollapse) {\n        $element.addClass('ng-hide');\n      } else {\n        $element.removeClass('ng-hide');\n      }\n    });\n\n    var unbindDestroy = $scope.$on('$destroy', function() {\n      unbindDestroy();\n      unbindWatcher();\n    });\n\n  })\n  .directive('mwlCollapseFallback', function($injector) {\n\n    if ($injector.has('collapseDirective')) {\n      return {};\n    }\n\n    return {\n      restrict: 'A',\n      controller: 'MwlCollapseFallbackCtrl'\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarYearCtrl', function($scope, moment, calendarHelper) {\n\n    var vm = this;\n    var firstRun = true;\n\n    $scope.$on('calendar.refreshView', function() {\n      vm.view = calendarHelper.getYearView($scope.events, $scope.currentDay);\n\n      //Auto open the calendar to the current day if set\n      if ($scope.autoOpen && firstRun) {\n        firstRun = false;\n        vm.view.forEach(function(month) {\n          if (moment($scope.currentDay).startOf('month').isSame(month.date)) {\n            vm.monthClicked(month, true);\n          }\n        });\n      }\n\n    });\n\n    vm.monthClicked = function(month, monthClickedFirstRun) {\n\n      if (!monthClickedFirstRun) {\n        $scope.onTimespanClick({calendarDate: month.date.toDate()});\n      }\n\n      vm.openRowIndex = null;\n      var monthIndex = vm.view.indexOf(month);\n      if (monthIndex === vm.openMonthIndex) { //the month has been clicked and is already open\n        vm.openMonthIndex = null; //close the open month\n      } else {\n        vm.openMonthIndex = monthIndex;\n        vm.openRowIndex = Math.floor(monthIndex / 4);\n      }\n\n    };\n\n    vm.handleEventDrop = function(event, newMonthDate) {\n      var newStart = moment(event.startsAt).month(moment(newMonthDate).month());\n      var newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n\n      $scope.onEventDrop({\n        calendarEvent: event,\n        calendarDate: newMonthDate,\n        calendarNewEventStart: newStart.toDate(),\n        calendarNewEventEnd: newEnd.toDate()\n      });\n    };\n\n  })\n  .directive('mwlCalendarYear', function() {\n\n    return {\n      templateUrl: 'src/templates/calendarYearView.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=',\n        currentDay: '=',\n        onEventClick: '=',\n        onEventDrop: '=',\n        onEditEventClick: '=',\n        onDeleteEventClick: '=',\n        editEventHtml: '=',\n        deleteEventHtml: '=',\n        autoOpen: '=',\n        onTimespanClick: '='\n      },\n      controller: 'MwlCalendarYearCtrl as vm',\n      link: function(scope, element, attrs, calendarCtrl) {\n        scope.vm.calendarCtrl = calendarCtrl;\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarWeekCtrl', function($scope, $sce, moment, calendarHelper, calendarConfig) {\n\n    var vm = this;\n\n    vm.showTimes = calendarConfig.showTimesOnWeekView;\n    vm.$sce = $sce;\n\n    $scope.$on('calendar.refreshView', function() {\n      vm.dayViewHeight = calendarHelper.getDayViewHeight(\n        $scope.dayViewStart,\n        $scope.dayViewEnd,\n        $scope.dayViewSplit\n      );\n      if (vm.showTimes) {\n        vm.view = calendarHelper.getWeekViewWithTimes(\n          $scope.events,\n          $scope.currentDay,\n          $scope.dayViewStart,\n          $scope.dayViewEnd,\n          $scope.dayViewSplit\n        );\n      } else {\n        vm.view = calendarHelper.getWeekView($scope.events, $scope.currentDay);\n      }\n    });\n\n    vm.weekDragged = function(event, daysDiff, minuteChunksMoved) {\n\n      var newStart = moment(event.startsAt).add(daysDiff, 'days');\n      var newEnd = moment(event.endsAt).add(daysDiff, 'days');\n\n      if (minuteChunksMoved) {\n        var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n        newStart = newStart.add(minutesDiff, 'minutes');\n        newEnd = newEnd.add(minutesDiff, 'minutes');\n      }\n\n      delete event.tempStartsAt;\n\n      $scope.onEventDrop({\n        calendarEvent: event,\n        calendarNewEventStart: newStart.toDate(),\n        calendarNewEventEnd: newEnd.toDate()\n      });\n    };\n\n    vm.tempTimeChanged = function(event, minuteChunksMoved) {\n      var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n      event.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n    };\n\n  })\n  .directive('mwlCalendarWeek', function() {\n\n    return {\n      templateUrl: 'src/templates/calendarWeekView.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=',\n        currentDay: '=',\n        onEventClick: '=',\n        onEventDrop: '=',\n        dayViewStart: '=',\n        dayViewEnd: '=',\n        dayViewSplit: '='\n      },\n      controller: 'MwlCalendarWeekCtrl as vm',\n      link: function(scope, element, attrs, calendarCtrl) {\n        scope.vm.calendarCtrl = calendarCtrl;\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarSlideBoxCtrl', function($scope, $sce) {\n\n    var vm = this;\n    vm.$sce = $sce;\n\n    var unbindWatcher = $scope.$watch('isOpen', function(isOpen) {\n      vm.shouldCollapse = !isOpen;\n    });\n\n    var unbindDestroy = $scope.$on('$destroy', function() {\n      unbindDestroy();\n      unbindWatcher();\n    });\n\n  })\n  .directive('mwlCalendarSlideBox', function() {\n\n    return {\n      restrict: 'EA',\n      templateUrl: 'src/templates/calendarSlideBox.html',\n      replace: true,\n      controller: 'MwlCalendarSlideBoxCtrl as vm',\n      require: ['^?mwlCalendarMonth', '^?mwlCalendarYear'],\n      link: function(scope, elm, attrs, ctrls) {\n        scope.isMonthView = !!ctrls[0];\n        scope.isYearView = !!ctrls[1];\n      },\n      scope: {\n        isOpen: '=',\n        events: '=',\n        onEventClick: '=',\n        editEventHtml: '=',\n        onEditEventClick: '=',\n        deleteEventHtml: '=',\n        onDeleteEventClick: '='\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarMonthCtrl', function($scope, moment, calendarHelper) {\n\n    var vm = this;\n    var firstRun = true;\n\n    $scope.$on('calendar.refreshView', function() {\n\n      vm.weekDays = calendarHelper.getWeekDayNames();\n\n      vm.view = calendarHelper.getMonthView($scope.events, $scope.currentDay);\n      var rows = Math.floor(vm.view.length / 7);\n      vm.monthOffsets = [];\n      for (var i = 0; i < rows; i++) {\n        vm.monthOffsets.push(i * 7);\n      }\n\n      //Auto open the calendar to the current day if set\n      if ($scope.autoOpen && firstRun) {\n        firstRun = false;\n        vm.view.forEach(function(day) {\n          if (day.inMonth && moment($scope.currentDay).startOf('day').isSame(day.date)) {\n            vm.dayClicked(day, true);\n          }\n        });\n      }\n\n    });\n\n    vm.dayClicked = function(day, dayClickedFirstRun) {\n\n      if (!dayClickedFirstRun) {\n        $scope.onTimespanClick({\n          calendarDate: day.date.toDate()\n        });\n      }\n\n      vm.openRowIndex = null;\n      var dayIndex = vm.view.indexOf(day);\n      if (dayIndex === vm.openDayIndex) { //the day has been clicked and is already open\n        vm.openDayIndex = null; //close the open day\n      } else {\n        vm.openDayIndex = dayIndex;\n        vm.openRowIndex = Math.floor(dayIndex / 7);\n      }\n\n    };\n\n    vm.highlightEvent = function(event, shouldAddClass) {\n\n      vm.view.forEach(function(day) {\n        delete day.highlightClass;\n        if (shouldAddClass) {\n          var dayContainsEvent = day.events.indexOf(event) > -1;\n          if (dayContainsEvent) {\n            day.highlightClass = 'day-highlight dh-event-' + event.type;\n          }\n        }\n      });\n\n    };\n\n    vm.handleEventDrop = function(event, newDayDate) {\n\n      var newStart = moment(event.startsAt)\n        .date(moment(newDayDate).date())\n        .month(moment(newDayDate).month());\n\n      var newEnd = calendarHelper.adjustEndDateFromStartDiff(event.startsAt, newStart, event.endsAt);\n\n      $scope.onEventDrop({\n        calendarEvent: event,\n        calendarDate: newDayDate,\n        calendarNewEventStart: newStart.toDate(),\n        calendarNewEventEnd: newEnd.toDate()\n      });\n    };\n\n  })\n  .directive('mwlCalendarMonth', function() {\n\n    return {\n      templateUrl: 'src/templates/calendarMonthView.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=',\n        currentDay: '=',\n        onEventClick: '=',\n        onEditEventClick: '=',\n        onDeleteEventClick: '=',\n        onEventDrop: '=',\n        editEventHtml: '=',\n        deleteEventHtml: '=',\n        autoOpen: '=',\n        onTimespanClick: '='\n      },\n      controller: 'MwlCalendarMonthCtrl as vm',\n      link: function(scope, element, attrs, calendarCtrl) {\n        scope.vm.calendarCtrl = calendarCtrl;\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarHourListCtrl', function($scope, moment, calendarConfig, calendarHelper) {\n    var vm = this;\n    var dayViewStart, dayViewEnd;\n\n    function updateDays() {\n      dayViewStart = moment($scope.dayViewStart || '00:00', 'HH:mm');\n      dayViewEnd = moment($scope.dayViewEnd || '23:00', 'HH:mm');\n      vm.dayViewSplit = parseInt($scope.dayViewSplit);\n      vm.hours = [];\n      var dayCounter = moment(dayViewStart);\n      for (var i = 0; i <= dayViewEnd.diff(dayViewStart, 'hours'); i++) {\n        vm.hours.push({\n          label: calendarHelper.formatDate(dayCounter, calendarConfig.dateFormats.hour)\n        });\n        dayCounter.add(1, 'hour');\n      }\n    }\n\n    var originalLocale = moment.locale();\n\n    $scope.$on('calendar.refreshView', function() {\n\n      if (originalLocale !== moment.locale()) {\n        originalLocale = moment.locale();\n        updateDays();\n      }\n\n    });\n\n    updateDays();\n\n  })\n  .directive('mwlCalendarHourList', function() {\n\n    return {\n      restrict: 'EA',\n      templateUrl: 'src/templates/calendarHourList.html',\n      controller: 'MwlCalendarHourListCtrl as vm',\n      scope: {\n        dayViewStart: '=',\n        dayViewEnd: '=',\n        dayViewSplit: '='\n      }\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarDayCtrl', function($scope, $timeout, $sce, moment, calendarHelper, calendarConfig) {\n\n    var vm = this;\n\n    vm.calendarConfig = calendarConfig;\n    vm.$sce = $sce;\n\n    $scope.$on('calendar.refreshView', function() {\n      vm.dayViewHeight = calendarHelper.getDayViewHeight(\n        $scope.dayViewStart,\n        $scope.dayViewEnd,\n        $scope.dayViewSplit\n      );\n\n      vm.view = calendarHelper.getDayView(\n        $scope.events,\n        $scope.currentDay,\n        $scope.dayViewStart,\n        $scope.dayViewEnd,\n        $scope.dayViewSplit\n      );\n\n    });\n\n    vm.timeChanged = function(event, minuteChunksMoved) {\n      var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n      var newStart = moment(event.startsAt).add(minutesDiff, 'minutes');\n      var newEnd = moment(event.endsAt).add(minutesDiff, 'minutes');\n      delete event.tempStartsAt;\n\n      $scope.onEventDrop({\n        calendarEvent: event,\n        calendarNewEventStart: newStart.toDate(),\n        calendarNewEventEnd: newEnd.toDate()\n      });\n    };\n\n    vm.tempTimeChanged = function(event, minuteChunksMoved) {\n      var minutesDiff = minuteChunksMoved * $scope.dayViewSplit;\n      event.tempStartsAt = moment(event.startsAt).add(minutesDiff, 'minutes').toDate();\n    };\n\n  })\n  .directive('mwlCalendarDay', function() {\n\n    return {\n      templateUrl: 'src/templates/calendarDayView.html',\n      restrict: 'EA',\n      require: '^mwlCalendar',\n      scope: {\n        events: '=',\n        currentDay: '=',\n        onEventClick: '=',\n        onEventDrop: '=',\n        dayViewStart: '=',\n        dayViewEnd: '=',\n        dayViewSplit: '='\n      },\n      controller: 'MwlCalendarDayCtrl as vm'\n    };\n\n  });\n","'use strict';\n\nangular\n  .module('mwl.calendar')\n  .controller('MwlCalendarCtrl', function($scope, $timeout, $window, $locale, moment, calendarTitle, calendarDebounce) {\n\n    var vm = this;\n\n    $scope.events = $scope.events || [];\n\n    vm.changeView = function(view, newDay) {\n      $scope.view = view;\n      $scope.currentDay = newDay;\n    };\n\n    vm.drillDown = function(date) {\n\n      var rawDate = moment(date).toDate();\n\n      var nextView = {\n        year: 'month',\n        month: 'day',\n        week: 'day'\n      };\n\n      if ($scope.onDrillDownClick({calendarDate: rawDate, calendarNextView: nextView[$scope.view]}) !== false) {\n        vm.changeView(nextView[$scope.view], rawDate);\n      }\n\n    };\n\n    var previousDate = moment($scope.currentDay);\n    var previousView = angular.copy($scope.view);\n\n    //Use a debounce to prevent it being called 3 times on initialisation\n    var refreshCalendar = calendarDebounce(function() {\n      if (calendarTitle[$scope.view]) {\n        $scope.viewTitle = calendarTitle[$scope.view]($scope.currentDay);\n      }\n\n      $scope.events = $scope.events.map(function(event, index) {\n        Object.defineProperty(event, '$id', {enumerable: false, value: index});\n        return event;\n      });\n\n      //if on-timespan-click=\"calendarDay = calendarDate\" is set then dont update the view as nothing needs to change\n      var currentDate = moment($scope.currentDay);\n      var shouldUpdate = true;\n      if (previousDate.clone().startOf($scope.view).isSame(currentDate.clone().startOf($scope.view)) && !previousDate.isSame(currentDate) &&\n        $scope.view === previousView) {\n        shouldUpdate = false;\n      }\n      previousDate = currentDate;\n      previousView = angular.copy($scope.view);\n\n      if (shouldUpdate) {\n        $scope.$broadcast('calendar.refreshView');\n      }\n    }, 50);\n\n    //Auto update the calendar when the locale changes\n    var unbindLocaleWatcher = $scope.$watch(function() {\n      return moment.locale() + $locale.id;\n    }, refreshCalendar);\n\n    var unbindOnDestroy = [];\n    unbindOnDestroy.push(unbindLocaleWatcher);\n\n    //Refresh the calendar when any of these variables change.\n    unbindOnDestroy.push($scope.$watch('currentDay', refreshCalendar));\n    unbindOnDestroy.push($scope.$watch('view', refreshCalendar));\n    unbindOnDestroy.push($scope.$watch('events', refreshCalendar, true));\n\n    //Remove any watchers when the calendar is destroyed\n    var unbindDestroyListener = $scope.$on('$destroy', function() {\n      unbindOnDestroy.forEach(function(unbind) {\n        unbind();\n      });\n    });\n    unbindOnDestroy.push(unbindDestroyListener);\n\n  })\n  .directive('mwlCalendar', function() {\n\n    return {\n      templateUrl: 'src/templates/calendar.html',\n      restrict: 'EA',\n      scope: {\n        events: '=',\n        view: '=',\n        viewTitle: '=',\n        currentDay: '=',\n        editEventHtml: '=',\n        deleteEventHtml: '=',\n        autoOpen: '=',\n        onEventClick: '&',\n        onEventDrop: '&',\n        onEditEventClick: '&',\n        onDeleteEventClick: '&',\n        onTimespanClick: '&',\n        onDrillDownClick: '&',\n        dayViewStart: '@',\n        dayViewEnd: '@',\n        dayViewSplit: '@'\n      },\n      controller: 'MwlCalendarCtrl as vm'\n    };\n\n  });\n"],"sourceRoot":"/source/"}